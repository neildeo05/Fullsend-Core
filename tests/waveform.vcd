$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 M clk $end
  $var wire 32 O reg_array[0] [31:0] $end
  $var wire 32 Y reg_array[10] [31:0] $end
  $var wire 32 Z reg_array[11] [31:0] $end
  $var wire 32 [ reg_array[12] [31:0] $end
  $var wire 32 \ reg_array[13] [31:0] $end
  $var wire 32 ] reg_array[14] [31:0] $end
  $var wire 32 ^ reg_array[15] [31:0] $end
  $var wire 32 _ reg_array[16] [31:0] $end
  $var wire 32 ` reg_array[17] [31:0] $end
  $var wire 32 a reg_array[18] [31:0] $end
  $var wire 32 b reg_array[19] [31:0] $end
  $var wire 32 P reg_array[1] [31:0] $end
  $var wire 32 c reg_array[20] [31:0] $end
  $var wire 32 d reg_array[21] [31:0] $end
  $var wire 32 e reg_array[22] [31:0] $end
  $var wire 32 f reg_array[23] [31:0] $end
  $var wire 32 g reg_array[24] [31:0] $end
  $var wire 32 h reg_array[25] [31:0] $end
  $var wire 32 i reg_array[26] [31:0] $end
  $var wire 32 j reg_array[27] [31:0] $end
  $var wire 32 k reg_array[28] [31:0] $end
  $var wire 32 l reg_array[29] [31:0] $end
  $var wire 32 Q reg_array[2] [31:0] $end
  $var wire 32 m reg_array[30] [31:0] $end
  $var wire 32 n reg_array[31] [31:0] $end
  $var wire 32 R reg_array[3] [31:0] $end
  $var wire 32 S reg_array[4] [31:0] $end
  $var wire 32 T reg_array[5] [31:0] $end
  $var wire 32 U reg_array[6] [31:0] $end
  $var wire 32 V reg_array[7] [31:0] $end
  $var wire 32 W reg_array[8] [31:0] $end
  $var wire 32 X reg_array[9] [31:0] $end
  $var wire  1 N reset $end
  $scope module Core $end
   $var wire  4 ) alu_op [3:0] $end
   $var wire  1 % branch_inst $end
   $var wire  1 M clk $end
   $var wire  4 $ current_func [3:0] $end
   $var wire  7 # current_opcode [6:0] $end
   $var wire  1 ' load_inst $end
   $var wire 32 O reg_array[0] [31:0] $end
   $var wire 32 Y reg_array[10] [31:0] $end
   $var wire 32 Z reg_array[11] [31:0] $end
   $var wire 32 [ reg_array[12] [31:0] $end
   $var wire 32 \ reg_array[13] [31:0] $end
   $var wire 32 ] reg_array[14] [31:0] $end
   $var wire 32 ^ reg_array[15] [31:0] $end
   $var wire 32 _ reg_array[16] [31:0] $end
   $var wire 32 ` reg_array[17] [31:0] $end
   $var wire 32 a reg_array[18] [31:0] $end
   $var wire 32 b reg_array[19] [31:0] $end
   $var wire 32 P reg_array[1] [31:0] $end
   $var wire 32 c reg_array[20] [31:0] $end
   $var wire 32 d reg_array[21] [31:0] $end
   $var wire 32 e reg_array[22] [31:0] $end
   $var wire 32 f reg_array[23] [31:0] $end
   $var wire 32 g reg_array[24] [31:0] $end
   $var wire 32 h reg_array[25] [31:0] $end
   $var wire 32 i reg_array[26] [31:0] $end
   $var wire 32 j reg_array[27] [31:0] $end
   $var wire 32 k reg_array[28] [31:0] $end
   $var wire 32 l reg_array[29] [31:0] $end
   $var wire 32 Q reg_array[2] [31:0] $end
   $var wire 32 m reg_array[30] [31:0] $end
   $var wire 32 n reg_array[31] [31:0] $end
   $var wire 32 R reg_array[3] [31:0] $end
   $var wire 32 S reg_array[4] [31:0] $end
   $var wire 32 T reg_array[5] [31:0] $end
   $var wire 32 U reg_array[6] [31:0] $end
   $var wire 32 V reg_array[7] [31:0] $end
   $var wire 32 W reg_array[8] [31:0] $end
   $var wire 32 X reg_array[9] [31:0] $end
   $var wire  1 ( reg_dest $end
   $var wire  1 & reg_reg_inst $end
   $var wire  1 N reset $end
   $scope module cu $end
    $var wire  4 ) alu_op [3:0] $end
    $var wire  1 % branch_inst $end
    $var wire  1 M clk $end
    $var wire  4 $ current_func [3:0] $end
    $var wire  7 # current_opcode [6:0] $end
    $var wire  1 * delayed_load_inst $end
    $var wire  1 ' load_inst $end
    $var wire  1 ( reg_dest $end
    $var wire  1 & reg_reg_inst $end
    $var wire  1 N reset $end
   $upscope $end
   $scope module dp $end
    $var wire  4 ) alu_op [3:0] $end
    $var wire  1 % branch_inst $end
    $var wire  1 o branch_taken $end
    $var wire  1 M clk $end
    $var wire  4 $ current_func [3:0] $end
    $var wire  7 # current_opcode [6:0] $end
    $var wire 32 2 ex_mem[0] [31:0] $end
    $var wire 32 3 ex_mem[1] [31:0] $end
    $var wire 32 4 ex_mem[2] [31:0] $end
    $var wire 32 5 ex_mem[3] [31:0] $end
    $var wire 32 - id_ex[0] [31:0] $end
    $var wire 32 . id_ex[1] [31:0] $end
    $var wire 32 / id_ex[2] [31:0] $end
    $var wire 32 0 id_ex[3] [31:0] $end
    $var wire 32 1 id_ex[4] [31:0] $end
    $var wire 32 + if_id[0] [31:0] $end
    $var wire 32 , if_id[1] [31:0] $end
    $var wire  1 ' load_inst $end
    $var wire 32 6 mem_wb[0] [31:0] $end
    $var wire 32 7 mem_wb[1] [31:0] $end
    $var wire 32 8 mem_wb[2] [31:0] $end
    $var wire 32 9 mem_wb[3] [31:0] $end
    $var wire 32 p pc_offset_branch [31:0] $end
    $var wire 32 O reg_array[0] [31:0] $end
    $var wire 32 Y reg_array[10] [31:0] $end
    $var wire 32 Z reg_array[11] [31:0] $end
    $var wire 32 [ reg_array[12] [31:0] $end
    $var wire 32 \ reg_array[13] [31:0] $end
    $var wire 32 ] reg_array[14] [31:0] $end
    $var wire 32 ^ reg_array[15] [31:0] $end
    $var wire 32 _ reg_array[16] [31:0] $end
    $var wire 32 ` reg_array[17] [31:0] $end
    $var wire 32 a reg_array[18] [31:0] $end
    $var wire 32 b reg_array[19] [31:0] $end
    $var wire 32 P reg_array[1] [31:0] $end
    $var wire 32 c reg_array[20] [31:0] $end
    $var wire 32 d reg_array[21] [31:0] $end
    $var wire 32 e reg_array[22] [31:0] $end
    $var wire 32 f reg_array[23] [31:0] $end
    $var wire 32 g reg_array[24] [31:0] $end
    $var wire 32 h reg_array[25] [31:0] $end
    $var wire 32 i reg_array[26] [31:0] $end
    $var wire 32 j reg_array[27] [31:0] $end
    $var wire 32 k reg_array[28] [31:0] $end
    $var wire 32 l reg_array[29] [31:0] $end
    $var wire 32 Q reg_array[2] [31:0] $end
    $var wire 32 m reg_array[30] [31:0] $end
    $var wire 32 n reg_array[31] [31:0] $end
    $var wire 32 R reg_array[3] [31:0] $end
    $var wire 32 S reg_array[4] [31:0] $end
    $var wire 32 T reg_array[5] [31:0] $end
    $var wire 32 U reg_array[6] [31:0] $end
    $var wire 32 V reg_array[7] [31:0] $end
    $var wire 32 W reg_array[8] [31:0] $end
    $var wire 32 X reg_array[9] [31:0] $end
    $var wire  1 ( reg_dest $end
    $var wire  1 s reg_r_w $end
    $var wire  1 & reg_reg_inst $end
    $var wire  5 q reg_wa [4:0] $end
    $var wire  1 N reset $end
    $var wire 32 r wa_data [31:0] $end
    $scope module regs $end
     $var wire  1 M clk $end
     $var wire 32 < ra_data [31:0] $end
     $var wire 32 = rb_data [31:0] $end
     $var wire  5 : reg_a [4:0] $end
     $var wire 32 O reg_array[0] [31:0] $end
     $var wire 32 Y reg_array[10] [31:0] $end
     $var wire 32 Z reg_array[11] [31:0] $end
     $var wire 32 [ reg_array[12] [31:0] $end
     $var wire 32 \ reg_array[13] [31:0] $end
     $var wire 32 ] reg_array[14] [31:0] $end
     $var wire 32 ^ reg_array[15] [31:0] $end
     $var wire 32 _ reg_array[16] [31:0] $end
     $var wire 32 ` reg_array[17] [31:0] $end
     $var wire 32 a reg_array[18] [31:0] $end
     $var wire 32 b reg_array[19] [31:0] $end
     $var wire 32 P reg_array[1] [31:0] $end
     $var wire 32 c reg_array[20] [31:0] $end
     $var wire 32 d reg_array[21] [31:0] $end
     $var wire 32 e reg_array[22] [31:0] $end
     $var wire 32 f reg_array[23] [31:0] $end
     $var wire 32 g reg_array[24] [31:0] $end
     $var wire 32 h reg_array[25] [31:0] $end
     $var wire 32 i reg_array[26] [31:0] $end
     $var wire 32 j reg_array[27] [31:0] $end
     $var wire 32 k reg_array[28] [31:0] $end
     $var wire 32 l reg_array[29] [31:0] $end
     $var wire 32 Q reg_array[2] [31:0] $end
     $var wire 32 m reg_array[30] [31:0] $end
     $var wire 32 n reg_array[31] [31:0] $end
     $var wire 32 R reg_array[3] [31:0] $end
     $var wire 32 S reg_array[4] [31:0] $end
     $var wire 32 T reg_array[5] [31:0] $end
     $var wire 32 U reg_array[6] [31:0] $end
     $var wire 32 V reg_array[7] [31:0] $end
     $var wire 32 W reg_array[8] [31:0] $end
     $var wire 32 X reg_array[9] [31:0] $end
     $var wire  5 ; reg_b [4:0] $end
     $var wire  1 s reg_r_w $end
     $var wire  5 > reg_wa [4:0] $end
     $var wire  1 N reset $end
     $var wire 32 ? wa_data [31:0] $end
    $upscope $end
    $scope module s1 $end
     $var wire  1 A branch_cond $end
     $var wire  1 M clk $end
     $var wire 32 + if_id[0] [31:0] $end
     $var wire 32 , if_id[1] [31:0] $end
     $var wire 32 D ir [31:0] $end
     $var wire 32 C npc [31:0] $end
     $var wire 32 B pc [31:0] $end
     $var wire 32 @ pc_offset_branch [31:0] $end
     $var wire  1 N reset $end
     $scope module mem $end
      $var wire 32 B address [31:0] $end
      $var wire 32 D read_out [31:0] $end
     $upscope $end
    $upscope $end
    $scope module s2 $end
     $var wire  1 M clk $end
     $var wire 32 - id_ex[0] [31:0] $end
     $var wire 32 . id_ex[1] [31:0] $end
     $var wire 32 / id_ex[2] [31:0] $end
     $var wire 32 0 id_ex[3] [31:0] $end
     $var wire 32 1 id_ex[4] [31:0] $end
     $var wire 32 D if_id_ir [31:0] $end
     $var wire 32 C if_id_npc [31:0] $end
     $var wire  1 N reset $end
    $upscope $end
    $scope module s3 $end
     $var wire 32 t alu_a [31:0] $end
     $var wire 32 H alu_b [31:0] $end
     $var wire  4 ) alu_op [3:0] $end
     $var wire 32 I alu_out [31:0] $end
     $var wire  1 % branch_inst $end
     $var wire  1 M clk $end
     $var wire 32 2 ex_mem[0] [31:0] $end
     $var wire 32 3 ex_mem[1] [31:0] $end
     $var wire 32 4 ex_mem[2] [31:0] $end
     $var wire 32 5 ex_mem[3] [31:0] $end
     $var wire 32 < id_ex_a [31:0] $end
     $var wire 32 = id_ex_b [31:0] $end
     $var wire 32 G id_ex_imm [31:0] $end
     $var wire 32 F id_ex_ir [31:0] $end
     $var wire 32 E id_ex_npc [31:0] $end
     $var wire  1 & reg_reg_inst $end
     $var wire  1 N reset $end
     $scope module alu $end
      $var wire 32 < alu_a [31:0] $end
      $var wire 32 H alu_b [31:0] $end
      $var wire  4 ) alu_op [3:0] $end
      $var wire 32 I alu_out [31:0] $end
     $upscope $end
    $upscope $end
    $scope module s4 $end
     $var wire  1 M clk $end
     $var wire 32 @ ex_mem_alu_output [31:0] $end
     $var wire 32 K ex_mem_b [31:0] $end
     $var wire 32 J ex_mem_ir [31:0] $end
     $var wire  1 ' load_inst $end
     $var wire 32 u mem_out [31:0] $end
     $var wire 32 6 mem_wb[0] [31:0] $end
     $var wire 32 7 mem_wb[1] [31:0] $end
     $var wire 32 8 mem_wb[2] [31:0] $end
     $var wire 32 9 mem_wb[3] [31:0] $end
     $var wire  1 v r_w $end
     $var wire  1 N reset $end
     $scope module dm $end
      $var wire 32 @ address [31:0] $end
      $var wire  1 M clk $end
      $var wire  1 ' en $end
      $var wire 32 K in [31:0] $end
      $var wire 32 L out [31:0] $end
      $var wire  1 v r_w $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
b0000000 #
b0000 $
0%
0&
0'
0(
b0000 )
0*
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000 :
b00000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
0A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
0M
0N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
0o
b00000000000000000000000000000000 p
b00000 q
b00000000000000000000000000000000 r
0s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
0v
#10
b00000000011000000000001100010011 +
b00000000000000000000000000000001 ,
b00110 ;
b00000000000000000000000000000001 B
b00000000000000000000000000000001 C
b00000000011000000000001100010011 D
1M
#15
0M
#18
#20
b0010011 #
b0001 )
b00000000011100000000001110010011 +
b00000000000000000000000000000010 ,
b00000000000000000000000000000001 /
b00000000011000000000001100010011 0
b00000000000000000000000000000110 1
b00111 ;
b00000000000000000000000000000010 B
b00000000000000000000000000000010 C
b00000000011100000000001110010011 D
b00000000000000000000000000000001 E
b00000000011000000000001100010011 F
b00000000000000000000000000000110 G
b00000000000000000000000000000110 H
b00000000000000000000000000000110 I
1M
#25
0M
#28
#30
b11000001100000000000000010010011 +
b00000000000000000000000000000011 ,
b00000000000000000000000000000010 /
b00000000011100000000001110010011 0
b00000000000000000000000000000111 1
b00000000011000000000001100010011 2
b00000000000000000000000000000110 4
b11000 ;
b00000000000000000000000000000110 @
b00000000000000000000000000000011 B
b00000000000000000000000000000011 C
b11000001100000000000000010010011 D
b00000000000000000000000000000010 E
b00000000011100000000001110010011 F
b00000000000000000000000000000111 G
b00000000000000000000000000000111 H
b00000000000000000000000000000111 I
b00000000011000000000001100010011 J
1M
#35
0M
#38
#40
b1000 $
b00000000000000000000000000010011 +
b00000000000000000000000000000100 ,
b00000000000000000000000000000011 /
b11000001100000000000000010010011 0
b11111111111111111111110000011000 1
b00000000011100000000001110010011 2
b00000000000000000000000000000111 4
b00000000011000000000001100010011 6
b00000000000000000000000000000110 7
b00000 ;
b00110 >
b00000000000000000000000000000110 ?
b00000000000000000000000000000111 @
b00000000000000000000000000000100 B
b00000000000000000000000000000100 C
b00000000000000000000000000010011 D
b00000000000000000000000000000011 E
b11000001100000000000000010010011 F
b11111111111111111111110000011000 G
b11111111111111111111110000011000 H
b11111111111111111111110000011000 I
b00000000011100000000001110010011 J
1M
#45
0M
#48
#50
b0000 $
b00000000000000000000000000000101 ,
b00000000000000000000000000000100 /
b00000000000000000000000000010011 0
b00000000000000000000000000000000 1
b11000001100000000000000010010011 2
b11111111111111111111110000011000 4
b00000000011100000000001110010011 6
b00000000000000000000000000000111 7
b00111 >
b00000000000000000000000000000111 ?
b11111111111111111111110000011000 @
b00000000000000000000000000000101 B
b00000000000000000000000000000101 C
b00000000000000000000000000000100 E
b00000000000000000000000000010011 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b11000001100000000000000010010011 J
1M
b00000000000000000000000000000110 U
#55
0M
#58
#60
b00000000000000000000000000000110 ,
b00000000000000000000000000000101 /
b00000000000000000000000000010011 2
b00000000000000000000000000000000 4
b11000001100000000000000010010011 6
b11111111111111111111110000011000 7
b00001 >
b11111111111111111111110000011000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000110 B
b00000000000000000000000000000110 C
b00000000000000000000000000000101 E
b00000000000000000000000000010011 J
1M
b00000000000000000000000000000111 V
#65
0M
#68
#70
b00000000000000000000000000000111 ,
b00000000000000000000000000000110 /
b00000000000000000000000000010011 6
b00000000000000000000000000000000 7
b00000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000111 B
b00000000000000000000000000000111 C
b00000000000000000000000000000110 E
1M
b11111111111111111111110000011000 P
#75
0M
#78
#80
b00000000011100110000001010110011 +
b00000000000000000000000000001000 ,
b00000000000000000000000000000111 /
b00110 :
b00111 ;
b00000000000000000000000000001000 B
b00000000000000000000000000001000 C
b00000000011100110000001010110011 D
b00000000000000000000000000000111 E
1M
#85
0M
#88
#90
b0110011 #
1&
b01000000011100110000010000110011 +
b00000000000000000000000000001001 ,
b00000000000000000000000000000110 -
b00000000000000000000000000000111 .
b00000000000000000000000000001000 /
b00000000011100110000001010110011 0
b00000000000000000000000000000111 1
b00000000000000000000000000000110 <
b00000000000000000000000000000111 =
b00000000000000000000000000001001 B
b00000000000000000000000000001001 C
b01000000011100110000010000110011 D
b00000000000000000000000000001000 E
b00000000011100110000001010110011 F
b00000000000000000000000000000111 G
b00000000000000000000000000000111 H
b00000000000000000000000000001101 I
1M
#95
0M
#98
#100
b1000 $
b0010 )
b00000000000100000010000100000011 +
b00000000000000000000000000001010 ,
b00000000000000000000000000001001 /
b01000000011100110000010000110011 0
b00000000000000000000010000000111 1
b00000000011100110000001010110011 2
b00000000000000000000000000001101 4
b00000000000000000000000000000111 5
b00000 :
b00001 ;
b00000000000000000000000000001101 @
b00000000000000000000000000001010 B
b00000000000000000000000000001010 C
b00000000000100000010000100000011 D
b00000000000000000000000000001001 E
b01000000011100110000010000110011 F
b00000000000000000000010000000111 G
b11111111111111111111111111111111 I
b00000000011100110000001010110011 J
b00000000000000000000000000000111 K
1M
#105
0M
#108
#110
b0000011 #
b0010 $
0&
b0001 )
1*
b00000000000000000000000000010011 +
b00000000000000000000000000001011 ,
b00000000000000000000000000000000 -
b11111111111111111111110000011000 .
b00000000000000000000000000001010 /
b00000000000100000010000100000011 0
b00000000000000000000000000000001 1
b01000000011100110000010000110011 2
b11111111111111111111111111111111 4
b00000000011100110000001010110011 6
b00000000000000000000000000001101 7
b00000 ;
b00000000000000000000000000000000 <
b11111111111111111111110000011000 =
b00101 >
b00000000000000000000000000001101 ?
b11111111111111111111111111111111 @
b00000000000000000000000000001011 B
b00000000000000000000000000001011 C
b00000000000000000000000000010011 D
b00000000000000000000000000001010 E
b00000000000100000010000100000011 F
b00000000000000000000000000000001 G
b00000000000000000000000000000001 H
b00000000000000000000000000000001 I
b01000000011100110000010000110011 J
1M
#115
0M
#118
#120
b0010011 #
b0000 $
1'
0*
b00000000000000000000000000001100 ,
b00000000000000000000000000000000 .
b00000000000000000000000000001011 /
b00000000000000000000000000010011 0
b00000000000000000000000000000000 1
b00000000000100000010000100000011 2
b00000000000000000000000000000001 4
b11111111111111111111110000011000 5
b01000000011100110000010000110011 6
b11111111111111111111111111111111 7
b00000000000000000000000000000000 =
b01000 >
b11111111111111111111111111111111 ?
b00000000000000000000000000000001 @
b00000000000000000000000000001100 B
b00000000000000000000000000001100 C
b00000000000000000000000000001011 E
b00000000000000000000000000010011 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000100000010000100000011 J
b11111111111111111111110000011000 K
1M
b00000000000000000000000000001101 T
#125
0M
#128
#130
0'
b00000000000000000000000000001101 ,
b00000000000000000000000000001100 /
b00000000000000000000000000010011 2
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000100000010000100000011 6
b00000000000000000000000000000001 7
b00000000000000000000000001000101 8
b00000000000000000000000000000001 9
b00010 >
b00000000000000000000000001000101 ?
b00000000000000000000000000000000 @
b00000000000000000000000000001101 B
b00000000000000000000000000001101 C
b00000000000000000000000000001100 E
b00000000000000000000000000010011 J
b00000000000000000000000000000000 K
b00000000000000000000000001000101 L
1M
b11111111111111111111111111111111 W
#135
0M
#138
#140
b00000000000000000000000000001110 ,
b00000000000000000000000000001101 /
b00000000000000000000000000010011 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000001110 B
b00000000000000000000000000001110 C
b00000000000000000000000000001101 E
b00000000000000000000000000000000 L
1M
b00000000000000000000000001000101 Q
#145
0M
#148
#150
b00000000011000010000001000110011 +
b00000000000000000000000000001111 ,
b00000000000000000000000000001110 /
b00010 :
b00110 ;
b00000000000000000000000000001111 B
b00000000000000000000000000001111 C
b00000000011000010000001000110011 D
b00000000000000000000000000001110 E
1M
#155
0M
#158
#160
b0110011 #
1&
b00000000000000000000000000010011 +
b00000000000000000000000000010000 ,
b00000000000000000000000001000101 -
b00000000000000000000000000000110 .
b00000000000000000000000000001111 /
b00000000011000010000001000110011 0
b00000000000000000000000000000110 1
b00000 :
b00000 ;
b00000000000000000000000001000101 <
b00000000000000000000000000000110 =
b00000000000000000000000000010000 B
b00000000000000000000000000010000 C
b00000000000000000000000000010011 D
b00000000000000000000000000001111 E
b00000000011000010000001000110011 F
b00000000000000000000000000000110 G
b00000000000000000000000000000110 H
b00000000000000000000000001001011 I
1M
#165
0M
#168
#170
b0010011 #
0&
b00000000000000000000000000010001 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000010000 /
b00000000000000000000000000010011 0
b00000000000000000000000000000000 1
b00000000011000010000001000110011 2
b00000000000000000000000001001011 4
b00000000000000000000000000000110 5
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000001001011 @
b00000000000000000000000000010001 B
b00000000000000000000000000010001 C
b00000000000000000000000000010000 E
b00000000000000000000000000010011 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000011000010000001000110011 J
b00000000000000000000000000000110 K
1M
#175
0M
#178
#180
b00000000000000000000000000010010 ,
b00000000000000000000000000010001 /
b00000000000000000000000000010011 2
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000011000010000001000110011 6
b00000000000000000000000001001011 7
b00100 >
b00000000000000000000000001001011 ?
b00000000000000000000000000000000 @
b00000000000000000000000000010010 B
b00000000000000000000000000010010 C
b00000000000000000000000000010001 E
b00000000000000000000000000010011 J
b00000000000000000000000000000000 K
1M
#185
0M
#188
#190
b00000000000000000000000000010011 ,
b00000000000000000000000000010010 /
b00000000000000000000000000010011 6
b00000000000000000000000000000000 7
b00000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000010011 B
b00000000000000000000000000010011 C
b00000000000000000000000000010010 E
1M
b00000000000000000000000001001011 S
#195
0M
#198
#200
b00000000000000000000000000010100 ,
b00000000000000000000000000010011 /
b00000000000000000000000000010100 B
b00000000000000000000000000010100 C
b00000000000000000000000000010011 E
1M
#205
0M
#208
#210
b00000000011100100000001000110011 +
b00000000000000000000000000010101 ,
b00000000000000000000000000010100 /
b00100 :
b00111 ;
b00000000000000000000000000010101 B
b00000000000000000000000000010101 C
b00000000011100100000001000110011 D
b00000000000000000000000000010100 E
1M
#215
0M
#218
#220
b0110011 #
1&
b00000000000000000000000000010011 +
b00000000000000000000000000010110 ,
b00000000000000000000000001001011 -
b00000000000000000000000000000111 .
b00000000000000000000000000010101 /
b00000000011100100000001000110011 0
b00000000000000000000000000000111 1
b00000 :
b00000 ;
b00000000000000000000000001001011 <
b00000000000000000000000000000111 =
b00000000000000000000000000010110 B
b00000000000000000000000000010110 C
b00000000000000000000000000010011 D
b00000000000000000000000000010101 E
b00000000011100100000001000110011 F
b00000000000000000000000000000111 G
b00000000000000000000000000000111 H
b00000000000000000000000001010010 I
1M
#225
0M
#228
#230
b0010011 #
0&
b00000000000000000000000000010111 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000010110 /
b00000000000000000000000000010011 0
b00000000000000000000000000000000 1
b00000000011100100000001000110011 2
b00000000000000000000000001010010 4
b00000000000000000000000000000111 5
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000001010010 @
b00000000000000000000000000010111 B
b00000000000000000000000000010111 C
b00000000000000000000000000010110 E
b00000000000000000000000000010011 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000011100100000001000110011 J
b00000000000000000000000000000111 K
1M
#235
0M
#238
#240
b00000000000000000000000000011000 ,
b00000000000000000000000000010111 /
b00000000000000000000000000010011 2
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000011100100000001000110011 6
b00000000000000000000000001010010 7
b00100 >
b00000000000000000000000001010010 ?
b00000000000000000000000000000000 @
b00000000000000000000000000011000 B
b00000000000000000000000000011000 C
b00000000000000000000000000010111 E
b00000000000000000000000000010011 J
b00000000000000000000000000000000 K
1M
#245
0M
#248
#250
b00000000000000000000000000011001 ,
b00000000000000000000000000011000 /
b00000000000000000000000000010011 6
b00000000000000000000000000000000 7
b00000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000011001 B
b00000000000000000000000000011001 C
b00000000000000000000000000011000 E
1M
b00000000000000000000000001010010 S
#255
0M
#258
#260
b00000000000000000000000000000000 +
b00000000000000000000000000011010 ,
b00000000000000000000000000011001 /
b00000000000000000000000000011010 B
b00000000000000000000000000011010 C
b00000000000000000000000000000000 D
b00000000000000000000000000011001 E
1M
#265
0M
#268
#270
b0000000 #
b0000 )
b00000000000000000000000000011011 ,
b00000000000000000000000000011010 /
b00000000000000000000000000000000 0
b00000000000000000000000000011011 B
b00000000000000000000000000011011 C
b00000000000000000000000000011010 E
b00000000000000000000000000000000 F
1M
#275
0M
#278
#280
b00000000000000000000000000011100 ,
b00000000000000000000000000011011 /
b00000000000000000000000000000000 2
b00000000000000000000000000011100 B
b00000000000000000000000000011100 C
b00000000000000000000000000011011 E
b00000000000000000000000000000000 J
1M
#285
0M
#288
#290
b00000000000000000000000000011101 ,
b00000000000000000000000000011100 /
b00000000000000000000000000000000 6
b00000000000000000000000000011101 B
b00000000000000000000000000011101 C
b00000000000000000000000000011100 E
1M
#295
0M
#298
#300
b00000000000000000000000000011110 ,
b00000000000000000000000000011101 /
b00000000000000000000000000011110 B
b00000000000000000000000000011110 C
b00000000000000000000000000011101 E
1M
#305
0M
#308
#310
b00000000000000000000000000011111 ,
b00000000000000000000000000011110 /
b00000000000000000000000000011111 B
b00000000000000000000000000011111 C
b00000000000000000000000000011110 E
1M
#315
0M
#318
#320
b00000000000000000000000000100000 ,
b00000000000000000000000000011111 /
b00000000000000000000000000100000 B
b00000000000000000000000000100000 C
b00000000000000000000000000011111 E
1M
#325
0M
#328
#330
b00000000000000000000000000100001 ,
b00000000000000000000000000100000 /
b00000000000000000000000000100001 B
b00000000000000000000000000100001 C
b00000000000000000000000000100000 E
1M
#335
0M
#338
#340
b00000000000000000000000000100010 ,
b00000000000000000000000000100001 /
b00000000000000000000000000100010 B
b00000000000000000000000000100010 C
b00000000000000000000000000100001 E
1M
#345
0M
#348
#350
b00000000000000000000000000100011 ,
b00000000000000000000000000100010 /
b00000000000000000000000000100011 B
b00000000000000000000000000100011 C
b00000000000000000000000000100010 E
1M
#355
0M
#358
#360
b00000000000000000000000000100100 ,
b00000000000000000000000000100011 /
b00000000000000000000000000100100 B
b00000000000000000000000000100100 C
b00000000000000000000000000100011 E
1M
#365
0M
#368
#370
b00000000000000000000000000100101 ,
b00000000000000000000000000100100 /
b00000000000000000000000000100101 B
b00000000000000000000000000100101 C
b00000000000000000000000000100100 E
1M
#375
0M
#378
#380
b00000000000000000000000000100110 ,
b00000000000000000000000000100101 /
b00000000000000000000000000100110 B
b00000000000000000000000000100110 C
b00000000000000000000000000100101 E
1M
#385
0M
#388
#390
b00000000000000000000000000100111 ,
b00000000000000000000000000100110 /
b00000000000000000000000000100111 B
b00000000000000000000000000100111 C
b00000000000000000000000000100110 E
1M
#395
0M
#398
#400
b00000000000000000000000000101000 ,
b00000000000000000000000000100111 /
b00000000000000000000000000101000 B
b00000000000000000000000000101000 C
b00000000000000000000000000100111 E
1M
#405
0M
