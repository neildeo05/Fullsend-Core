$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 P clk $end
  $var wire 32 R reg_array[0] [31:0] $end
  $var wire 32 \ reg_array[10] [31:0] $end
  $var wire 32 ] reg_array[11] [31:0] $end
  $var wire 32 ^ reg_array[12] [31:0] $end
  $var wire 32 _ reg_array[13] [31:0] $end
  $var wire 32 ` reg_array[14] [31:0] $end
  $var wire 32 a reg_array[15] [31:0] $end
  $var wire 32 b reg_array[16] [31:0] $end
  $var wire 32 c reg_array[17] [31:0] $end
  $var wire 32 d reg_array[18] [31:0] $end
  $var wire 32 e reg_array[19] [31:0] $end
  $var wire 32 S reg_array[1] [31:0] $end
  $var wire 32 f reg_array[20] [31:0] $end
  $var wire 32 g reg_array[21] [31:0] $end
  $var wire 32 h reg_array[22] [31:0] $end
  $var wire 32 i reg_array[23] [31:0] $end
  $var wire 32 j reg_array[24] [31:0] $end
  $var wire 32 k reg_array[25] [31:0] $end
  $var wire 32 l reg_array[26] [31:0] $end
  $var wire 32 m reg_array[27] [31:0] $end
  $var wire 32 n reg_array[28] [31:0] $end
  $var wire 32 o reg_array[29] [31:0] $end
  $var wire 32 T reg_array[2] [31:0] $end
  $var wire 32 p reg_array[30] [31:0] $end
  $var wire 32 q reg_array[31] [31:0] $end
  $var wire 32 U reg_array[3] [31:0] $end
  $var wire 32 V reg_array[4] [31:0] $end
  $var wire 32 W reg_array[5] [31:0] $end
  $var wire 32 X reg_array[6] [31:0] $end
  $var wire 32 Y reg_array[7] [31:0] $end
  $var wire 32 Z reg_array[8] [31:0] $end
  $var wire 32 [ reg_array[9] [31:0] $end
  $var wire  1 Q reset $end
  $scope module Core $end
   $var wire  4 M alu_op [3:0] $end
   $var wire  1 I branch_inst $end
   $var wire  1 P clk $end
   $var wire  4 * current_func [3:0] $end
   $var wire  7 ) current_opcode [6:0] $end
   $var wire  1 K ex_load_inst $end
   $var wire  1 L ex_reg_dest $end
   $var wire  1 5 load_inst $end
   $var wire 32 R reg_array[0] [31:0] $end
   $var wire 32 \ reg_array[10] [31:0] $end
   $var wire 32 ] reg_array[11] [31:0] $end
   $var wire 32 ^ reg_array[12] [31:0] $end
   $var wire 32 _ reg_array[13] [31:0] $end
   $var wire 32 ` reg_array[14] [31:0] $end
   $var wire 32 a reg_array[15] [31:0] $end
   $var wire 32 b reg_array[16] [31:0] $end
   $var wire 32 c reg_array[17] [31:0] $end
   $var wire 32 d reg_array[18] [31:0] $end
   $var wire 32 e reg_array[19] [31:0] $end
   $var wire 32 S reg_array[1] [31:0] $end
   $var wire 32 f reg_array[20] [31:0] $end
   $var wire 32 g reg_array[21] [31:0] $end
   $var wire 32 h reg_array[22] [31:0] $end
   $var wire 32 i reg_array[23] [31:0] $end
   $var wire 32 j reg_array[24] [31:0] $end
   $var wire 32 k reg_array[25] [31:0] $end
   $var wire 32 l reg_array[26] [31:0] $end
   $var wire 32 m reg_array[27] [31:0] $end
   $var wire 32 n reg_array[28] [31:0] $end
   $var wire 32 o reg_array[29] [31:0] $end
   $var wire 32 T reg_array[2] [31:0] $end
   $var wire 32 p reg_array[30] [31:0] $end
   $var wire 32 q reg_array[31] [31:0] $end
   $var wire 32 U reg_array[3] [31:0] $end
   $var wire 32 V reg_array[4] [31:0] $end
   $var wire 32 W reg_array[5] [31:0] $end
   $var wire 32 X reg_array[6] [31:0] $end
   $var wire 32 Y reg_array[7] [31:0] $end
   $var wire 32 Z reg_array[8] [31:0] $end
   $var wire 32 [ reg_array[9] [31:0] $end
   $var wire  1 6 reg_dest $end
   $var wire  1 J reg_reg_inst $end
   $var wire  1 Q reset $end
   $scope module cu $end
    $var wire  4 M alu_op [3:0] $end
    $var wire  1 I branch_inst $end
    $var wire  1 P clk $end
    $var wire  4 * current_func [3:0] $end
    $var wire  7 ) current_opcode [6:0] $end
    $var wire  1 K ex_load_inst $end
    $var wire  1 L ex_reg_dest $end
    $var wire  1 5 load_inst $end
    $var wire  1 6 reg_dest $end
    $var wire  1 J reg_reg_inst $end
    $var wire  1 Q reset $end
   $upscope $end
   $scope module dp $end
    $var wire  4 M alu_op [3:0] $end
    $var wire  1 I branch_inst $end
    $var wire  1 u branch_taken $end
    $var wire  1 P clk $end
    $var wire  4 * current_func [3:0] $end
    $var wire  7 ) current_opcode [6:0] $end
    $var wire  1 A enable $end
    $var wire  1 K ex_load_inst $end
    $var wire 32 7 ex_mem[0] [31:0] $end
    $var wire 32 8 ex_mem[1] [31:0] $end
    $var wire 32 9 ex_mem[2] [31:0] $end
    $var wire 32 : ex_mem[3] [31:0] $end
    $var wire  1 L ex_reg_dest $end
    $var wire  1 r hazard $end
    $var wire 32 + id_ex[0] [31:0] $end
    $var wire 32 , id_ex[1] [31:0] $end
    $var wire 32 - id_ex[2] [31:0] $end
    $var wire 32 . id_ex[3] [31:0] $end
    $var wire 32 / id_ex[4] [31:0] $end
    $var wire 32 # if_id[0] [31:0] $end
    $var wire 32 $ if_id[1] [31:0] $end
    $var wire  1 5 load_inst $end
    $var wire 32 ; mem_wb[0] [31:0] $end
    $var wire 32 < mem_wb[1] [31:0] $end
    $var wire 32 = mem_wb[2] [31:0] $end
    $var wire 32 > mem_wb[3] [31:0] $end
    $var wire 32 ? mem_wb[4] [31:0] $end
    $var wire 32 v pc_offset_branch [31:0] $end
    $var wire 32 R reg_array[0] [31:0] $end
    $var wire 32 \ reg_array[10] [31:0] $end
    $var wire 32 ] reg_array[11] [31:0] $end
    $var wire 32 ^ reg_array[12] [31:0] $end
    $var wire 32 _ reg_array[13] [31:0] $end
    $var wire 32 ` reg_array[14] [31:0] $end
    $var wire 32 a reg_array[15] [31:0] $end
    $var wire 32 b reg_array[16] [31:0] $end
    $var wire 32 c reg_array[17] [31:0] $end
    $var wire 32 d reg_array[18] [31:0] $end
    $var wire 32 e reg_array[19] [31:0] $end
    $var wire 32 S reg_array[1] [31:0] $end
    $var wire 32 f reg_array[20] [31:0] $end
    $var wire 32 g reg_array[21] [31:0] $end
    $var wire 32 h reg_array[22] [31:0] $end
    $var wire 32 i reg_array[23] [31:0] $end
    $var wire 32 j reg_array[24] [31:0] $end
    $var wire 32 k reg_array[25] [31:0] $end
    $var wire 32 l reg_array[26] [31:0] $end
    $var wire 32 m reg_array[27] [31:0] $end
    $var wire 32 n reg_array[28] [31:0] $end
    $var wire 32 o reg_array[29] [31:0] $end
    $var wire 32 T reg_array[2] [31:0] $end
    $var wire 32 p reg_array[30] [31:0] $end
    $var wire 32 q reg_array[31] [31:0] $end
    $var wire 32 U reg_array[3] [31:0] $end
    $var wire 32 V reg_array[4] [31:0] $end
    $var wire 32 W reg_array[5] [31:0] $end
    $var wire 32 X reg_array[6] [31:0] $end
    $var wire 32 Y reg_array[7] [31:0] $end
    $var wire 32 Z reg_array[8] [31:0] $end
    $var wire 32 [ reg_array[9] [31:0] $end
    $var wire  1 6 reg_dest $end
    $var wire  1 y reg_r_w $end
    $var wire  1 J reg_reg_inst $end
    $var wire  5 w reg_wa [4:0] $end
    $var wire  1 Q reset $end
    $var wire  2 % stall_counter [1:0] $end
    $var wire 32 x wa_data [31:0] $end
    $var wire 32 @ write_back [31:0] $end
    $scope module hu $end
     $var wire  1 r hazard $end
     $var wire 32 0 id_ex_ir [31:0] $end
     $var wire 32 & if_id_ir [31:0] $end
     $var wire  1 r stall $end
     $var wire  2 % stall_counter [1:0] $end
    $upscope $end
    $scope module regs $end
     $var wire  1 P clk $end
     $var wire  1 A neg_enable $end
     $var wire 32 s ra_data [31:0] $end
     $var wire 32 t rb_data [31:0] $end
     $var wire  5 1 reg_a [4:0] $end
     $var wire 32 R reg_array[0] [31:0] $end
     $var wire 32 \ reg_array[10] [31:0] $end
     $var wire 32 ] reg_array[11] [31:0] $end
     $var wire 32 ^ reg_array[12] [31:0] $end
     $var wire 32 _ reg_array[13] [31:0] $end
     $var wire 32 ` reg_array[14] [31:0] $end
     $var wire 32 a reg_array[15] [31:0] $end
     $var wire 32 b reg_array[16] [31:0] $end
     $var wire 32 c reg_array[17] [31:0] $end
     $var wire 32 d reg_array[18] [31:0] $end
     $var wire 32 e reg_array[19] [31:0] $end
     $var wire 32 S reg_array[1] [31:0] $end
     $var wire 32 f reg_array[20] [31:0] $end
     $var wire 32 g reg_array[21] [31:0] $end
     $var wire 32 h reg_array[22] [31:0] $end
     $var wire 32 i reg_array[23] [31:0] $end
     $var wire 32 j reg_array[24] [31:0] $end
     $var wire 32 k reg_array[25] [31:0] $end
     $var wire 32 l reg_array[26] [31:0] $end
     $var wire 32 m reg_array[27] [31:0] $end
     $var wire 32 n reg_array[28] [31:0] $end
     $var wire 32 o reg_array[29] [31:0] $end
     $var wire 32 T reg_array[2] [31:0] $end
     $var wire 32 p reg_array[30] [31:0] $end
     $var wire 32 q reg_array[31] [31:0] $end
     $var wire 32 U reg_array[3] [31:0] $end
     $var wire 32 V reg_array[4] [31:0] $end
     $var wire 32 W reg_array[5] [31:0] $end
     $var wire 32 X reg_array[6] [31:0] $end
     $var wire 32 Y reg_array[7] [31:0] $end
     $var wire 32 Z reg_array[8] [31:0] $end
     $var wire 32 [ reg_array[9] [31:0] $end
     $var wire  5 2 reg_b [4:0] $end
     $var wire  1 y reg_r_w $end
     $var wire  5 B reg_wa [4:0] $end
     $var wire  1 Q reset $end
     $var wire 32 C wa_data [31:0] $end
    $upscope $end
    $scope module s1 $end
     $var wire  1 E branch_cond $end
     $var wire  1 P clk $end
     $var wire  1 r hazard $end
     $var wire 32 # if_id[0] [31:0] $end
     $var wire 32 $ if_id[1] [31:0] $end
     $var wire 32 & ir [31:0] $end
     $var wire 32 ( npc [31:0] $end
     $var wire 32 ' pc [31:0] $end
     $var wire 32 D pc_offset_branch [31:0] $end
     $var wire  1 Q reset $end
     $var wire  2 % stall_counter [1:0] $end
     $scope module mem $end
      $var wire 32 ' address [31:0] $end
      $var wire 32 & read_out [31:0] $end
     $upscope $end
    $upscope $end
    $scope module s2 $end
     $var wire  1 P clk $end
     $var wire  1 r hazard $end
     $var wire 32 + id_ex[0] [31:0] $end
     $var wire 32 , id_ex[1] [31:0] $end
     $var wire 32 - id_ex[2] [31:0] $end
     $var wire 32 . id_ex[3] [31:0] $end
     $var wire 32 / id_ex[4] [31:0] $end
     $var wire 32 & if_id_ir [31:0] $end
     $var wire 32 ( if_id_npc [31:0] $end
     $var wire  1 Q reset $end
    $upscope $end
    $scope module s3 $end
     $var wire 32 z alu_a [31:0] $end
     $var wire 32 N alu_b [31:0] $end
     $var wire  4 M alu_op [3:0] $end
     $var wire 32 O alu_out [31:0] $end
     $var wire  1 I branch_inst $end
     $var wire  1 P clk $end
     $var wire  1 K ex_load_inst $end
     $var wire 32 7 ex_mem[0] [31:0] $end
     $var wire 32 8 ex_mem[1] [31:0] $end
     $var wire 32 9 ex_mem[2] [31:0] $end
     $var wire 32 : ex_mem[3] [31:0] $end
     $var wire  1 L ex_reg_dest $end
     $var wire 32 s id_ex_a [31:0] $end
     $var wire 32 t id_ex_b [31:0] $end
     $var wire 32 4 id_ex_imm [31:0] $end
     $var wire 32 0 id_ex_ir [31:0] $end
     $var wire 32 3 id_ex_npc [31:0] $end
     $var wire  1 J reg_reg_inst $end
     $var wire  1 Q reset $end
     $scope module alu $end
      $var wire 32 s alu_a [31:0] $end
      $var wire 32 N alu_b [31:0] $end
      $var wire  4 M alu_op [3:0] $end
      $var wire 32 O alu_out [31:0] $end
     $upscope $end
    $upscope $end
    $scope module s4 $end
     $var wire  1 P clk $end
     $var wire 32 D ex_mem_alu_output [31:0] $end
     $var wire 32 G ex_mem_b [31:0] $end
     $var wire 32 F ex_mem_ir [31:0] $end
     $var wire  1 5 load_inst $end
     $var wire 32 ; mem_wb[0] [31:0] $end
     $var wire 32 < mem_wb[1] [31:0] $end
     $var wire 32 = mem_wb[2] [31:0] $end
     $var wire 32 > mem_wb[3] [31:0] $end
     $var wire 32 ? mem_wb[4] [31:0] $end
     $var wire  1 6 reg_dest $end
     $var wire  1 Q reset $end
     $scope module dm $end
      $var wire 32 D address [31:0] $end
      $var wire  1 P clk $end
      $var wire  1 5 en $end
      $var wire 32 G in [31:0] $end
      $var wire 32 H out [31:0] $end
      $var wire  1 6 r_w $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b0000000 )
b0000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 1
b00000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
05
06
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
0A
b00000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
0E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
0I
0J
0K
0L
b0000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
0P
0Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
0r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
0u
b00000000000000000000000000000000 v
b00000 w
b00000000000000000000000000000000 x
0y
b00000000000000000000000000000000 z
#10
b00000000011100000010001110000011 #
b00000000000000000000000000000001 $
b00000000011100000010001110000011 &
b00000000000000000000000000000001 '
b00000000000000000000000000000001 (
1P
#15
0P
#18
#20
b00000000010100000010000010000011 #
b00000000000000000000000000000010 $
b00000000010100000010000010000011 &
b00000000000000000000000000000010 '
b00000000000000000000000000000010 (
b0000011 )
b0010 *
b00000000000000000000000000000001 -
b00000000011100000010001110000011 .
b00000000000000000000000000000111 /
b00000000011100000010001110000011 0
b00111 2
b00000000000000000000000000000001 3
b00000000000000000000000000000111 4
1K
b0001 M
b00000000000000000000000000000111 N
b00000000000000000000000000000111 O
1P
#25
0P
#28
#30
b00000000011100001000001010110011 #
b00000000000000000000000000000011 $
b00000000011100001000001010110011 &
b00000000000000000000000000000011 '
b00000000000000000000000000000011 (
b00000000000000000000000000000010 -
b00000000010100000010000010000011 .
b00000000000000000000000000000101 /
b00000000010100000010000010000011 0
b00101 2
b00000000000000000000000000000010 3
b00000000000000000000000000000101 4
15
b00000000011100000010001110000011 7
b00000000000000000000000000000111 9
b00000000000000000000000000000111 D
b00000000011100000010001110000011 F
b00000000000000000000000000000101 N
b00000000000000000000000000000101 O
1P
1r
#35
0P
#38
#40
b01 %
b0000000 )
b0000 *
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 2
b00000000000000000000000000000000 4
b00000000010100000010000010000011 7
b00000000000000000000000000000101 9
b00000000011100000010001110000011 ;
b00000000000000000000000000000111 <
b00000000000000000000000000000111 =
b00000000000000000000000000000001 >
b00000000000000000000000000000001 @
b00111 B
b00000000000000000000000000000111 C
b00000000000000000000000000000101 D
b00000000010100000010000010000011 F
b00000000000000000000000000000111 H
0K
b0000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
1P
#45
0P
#48
#50
b10 %
05
b00000000000000000000000000000000 7
b00000000000000000000000000000000 9
b00000000010100000010000010000011 ;
b00000000000000000000000000000101 <
b00000000000000000000000000000101 =
b00001 B
b00000000000000000000000000000101 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000101 H
1P
b00000000000000000000000000000111 Y
0r
#55
0P
#58
#60
b00000000011000000010001100000011 #
b00000000000000000000000000000100 $
b00000000011000000010001100000011 &
b00000000000000000000000000000100 '
b00000000000000000000000000000100 (
b0110011 )
b00000000000000000000000000000011 -
b00000000011100001000001010110011 .
b00000000000000000000000000000111 /
b00000000011100001000001010110011 0
b00001 1
b00111 2
b00000000000000000000000000000011 3
b00000000000000000000000000000111 4
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 H
1J
b0001 M
1P
b00000000000000000000000000000101 S
#65
b00000000000000000000000000000101 +
b00000000000000000000000000000111 ,
b00000000000000000000000000000111 N
b00000000000000000000000000001100 O
0P
b00000000000000000000000000000101 s
b00000000000000000000000000000111 t
#68
#70
b01000000011100110000010000110011 #
b00000000000000000000000000000101 $
b01000000011100110000010000110011 &
b00000000000000000000000000000101 '
b00000000000000000000000000000101 (
b0000011 )
b0010 *
b00000000000000000000000000000100 -
b00000000011000000010001100000011 .
b00000000000000000000000000000110 /
b00000000011000000010001100000011 0
b00000 1
b00110 2
b00000000000000000000000000000100 3
b00000000000000000000000000000110 4
b00000000011100001000001010110011 7
b00000000000000000000000000001100 9
b00000000000000000000000000000111 :
b00000000000000000000000000001100 D
b00000000011100001000001010110011 F
b00000000000000000000000000000111 G
0J
1K
b00000000000000000000000000000110 N
b00000000000000000000000000001011 O
1P
1r
#75
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000110 O
0P
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
#78
#80
b11 %
b0000000 )
b0000 *
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 2
b00000000000000000000000000000000 4
15
b00000000011000000010001100000011 7
b00000000000000000000000000000110 9
b00000000000000000000000000000000 :
b00000000011100001000001010110011 ;
b00000000000000000000000000001100 <
b00000000000000000000000000001100 @
b00101 B
b00000000000000000000000000001100 C
b00000000000000000000000000000110 D
b00000000011000000010001100000011 F
b00000000000000000000000000000000 G
0K
b0000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
1P
#85
0P
#88
#90
b00 %
05
b00000000000000000000000000000000 7
b00000000000000000000000000000000 9
b00000000011000000010001100000011 ;
b00000000000000000000000000000110 <
b00000000000000000000000000000110 =
b00000000000000000000000000000001 >
b00000000000000000000000000000001 @
b00110 B
b00000000000000000000000000000110 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000110 H
1P
b00000000000000000000000000001100 W
#95
0P
#98
#100
b01 %
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 H
1P
b00000000000000000000000000000110 X
#105
0P
#108
#110
b10 %
1P
0r
#115
0P
#118
#120
b00000000011100110111010010110011 #
b00000000000000000000000000000110 $
b00000000011100110111010010110011 &
b00000000000000000000000000000110 '
b00000000000000000000000000000110 (
b0110011 )
b1000 *
b00000000000000000000000000000101 -
b01000000011100110000010000110011 .
b00000000000000000000010000000111 /
b01000000011100110000010000110011 0
b00110 1
b00111 2
b00000000000000000000000000000101 3
b00000000000000000000010000000111 4
1J
b0010 M
1P
#125
b00000000000000000000000000000110 +
b00000000000000000000000000000111 ,
b00000000000000000000000000000111 N
b11111111111111111111111111111111 O
0P
b00000000000000000000000000000110 s
b00000000000000000000000000000111 t
#128
#130
b00000000010100000010000100000011 #
b00000000000000000000000000000111 $
b00000000010100000010000100000011 &
b00000000000000000000000000000111 '
b00000000000000000000000000000111 (
b0111 *
b00000000000000000000000000000110 -
b00000000011100110111010010110011 .
b00000000000000000000000000000111 /
b00000000011100110111010010110011 0
b00000000000000000000000000000110 3
b00000000000000000000000000000111 4
b01000000011100110000010000110011 7
b11111111111111111111111111111111 9
b00000000000000000000000000000111 :
b11111111111111111111111111111111 D
b01000000011100110000010000110011 F
b00000000000000000000000000000111 G
b0101 M
b00000000000000000000000000000110 O
1P
#135
0P
#138
#140
b00000000010100000010001000000011 #
b00000000000000000000000000001000 $
b00000000010100000010001000000011 &
b00000000000000000000000000001000 '
b00000000000000000000000000001000 (
b0000011 )
b0010 *
b00000000000000000000000000000111 -
b00000000010100000010000100000011 .
b00000000000000000000000000000101 /
b00000000010100000010000100000011 0
b00000 1
b00101 2
b00000000000000000000000000000111 3
b00000000000000000000000000000101 4
b00000000011100110111010010110011 7
b00000000000000000000000000000110 9
b01000000011100110000010000110011 ;
b11111111111111111111111111111111 <
b11111111111111111111111111111111 @
b01000 B
b11111111111111111111111111111111 C
b00000000000000000000000000000110 D
b00000000011100110111010010110011 F
0J
1K
b0001 M
b00000000000000000000000000000101 N
b00000000000000000000000000001011 O
1P
#145
b00000000000000000000000000000000 +
b00000000000000000000000000001100 ,
b00000000000000000000000000000101 O
0P
b00000000000000000000000000000000 s
b00000000000000000000000000001100 t
#148
#150
b00000000010000010000000110110011 #
b00000000000000000000000000001001 $
b00000000010000010000000110110011 &
b00000000000000000000000000001001 '
b00000000000000000000000000001001 (
b00000000000000000000000000001000 -
b00000000010100000010001000000011 .
b00000000010100000010001000000011 0
b00000000000000000000000000001000 3
15
b00000000010100000010000100000011 7
b00000000000000000000000000000101 9
b00000000000000000000000000001100 :
b00000000011100110111010010110011 ;
b00000000000000000000000000000110 <
b00000000000000000000000000000110 @
b01001 B
b00000000000000000000000000000110 C
b00000000000000000000000000000101 D
b00000000010100000010000100000011 F
b00000000000000000000000000001100 G
1P
b11111111111111111111111111111111 Z
1r
#155
0P
#158
#160
b11 %
b0000000 )
b0000 *
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 2
b00000000000000000000000000000000 4
b00000000010100000010001000000011 7
b00000000010100000010000100000011 ;
b00000000000000000000000000000101 <
b00000000000000000000000000000101 =
b00000000000000000000000000000001 >
b00000000000000000000000000000001 @
b00010 B
b00000000000000000000000000000101 C
b00000000010100000010001000000011 F
b00000000000000000000000000000101 H
0K
b0000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
1P
b00000000000000000000000000000110 [
#165
b00000000000000000000000000000000 ,
0P
b00000000000000000000000000000000 t
#168
#170
b00 %
05
b00000000000000000000000000000000 7
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000010100000010001000000011 ;
b00100 B
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
1P
b00000000000000000000000000000101 T
#175
0P
#178
#180
b01 %
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 H
1P
b00000000000000000000000000000101 V
#185
0P
#188
#190
b10 %
1P
0r
#195
0P
#198
#200
b00000000000000000000000000000000 #
b00000000000000000000000000001010 $
b00000000000000000000000000000000 &
b00000000000000000000000000001010 '
b00000000000000000000000000001010 (
b0110011 )
b00000000000000000000000000001001 -
b00000000010000010000000110110011 .
b00000000000000000000000000000100 /
b00000000010000010000000110110011 0
b00010 1
b00100 2
b00000000000000000000000000001001 3
b00000000000000000000000000000100 4
1J
b0001 M
1P
#205
b00000000000000000000000000000101 +
b00000000000000000000000000000101 ,
b00000000000000000000000000000101 N
b00000000000000000000000000001010 O
0P
b00000000000000000000000000000101 s
b00000000000000000000000000000101 t
#208
#210
b00000000000000000000000000001011 $
b00000000000000000000000000001011 '
b00000000000000000000000000001011 (
b0000000 )
b00000000000000000000000000001010 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 1
b00000 2
b00000000000000000000000000001010 3
b00000000000000000000000000000000 4
b00000000010000010000000110110011 7
b00000000000000000000000000001010 9
b00000000000000000000000000000101 :
b00000000000000000000000000001010 D
b00000000010000010000000110110011 F
b00000000000000000000000000000101 G
0J
b0000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
1P
#215
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
0P
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
#218
#220
b00000000000000000000000000001100 $
b00000000000000000000000000001100 '
b00000000000000000000000000001100 (
b00000000000000000000000000001011 -
b00000000000000000000000000001011 3
b00000000000000000000000000000000 7
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000010000010000000110110011 ;
b00000000000000000000000000001010 <
b00000000000000000000000000001010 @
b00011 B
b00000000000000000000000000001010 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
1P
#225
0P
#228
#230
b00000000000000000000000000001101 $
b00000000000000000000000000001101 '
b00000000000000000000000000001101 (
b00000000000000000000000000001100 -
b00000000000000000000000000001100 3
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 @
b00000 B
b00000000000000000000000000000000 C
1P
b00000000000000000000000000001010 U
#235
0P
#238
#240
b00000000000000000000000000001110 $
b00000000000000000000000000001110 '
b00000000000000000000000000001110 (
b00000000000000000000000000001101 -
b00000000000000000000000000001101 3
1P
#245
0P
#248
#250
b00000000000000000000000000001111 $
b00000000000000000000000000001111 '
b00000000000000000000000000001111 (
b00000000000000000000000000001110 -
b00000000000000000000000000001110 3
1P
#255
0P
#258
#260
b00000000000000000000000000010000 $
b00000000000000000000000000010000 '
b00000000000000000000000000010000 (
b00000000000000000000000000001111 -
b00000000000000000000000000001111 3
1P
#265
0P
#268
#270
b00000000000000000000000000010001 $
b00000000000000000000000000010001 '
b00000000000000000000000000010001 (
b00000000000000000000000000010000 -
b00000000000000000000000000010000 3
1P
#275
0P
#278
#280
b00000000000000000000000000010010 $
b00000000000000000000000000010010 '
b00000000000000000000000000010010 (
b00000000000000000000000000010001 -
b00000000000000000000000000010001 3
1P
#285
0P
#288
#290
b00000000000000000000000000010011 $
b00000000000000000000000000010011 '
b00000000000000000000000000010011 (
b00000000000000000000000000010010 -
b00000000000000000000000000010010 3
1P
#295
0P
#298
#300
b00000000000000000000000000010100 $
b00000000000000000000000000010100 '
b00000000000000000000000000010100 (
b00000000000000000000000000010011 -
b00000000000000000000000000010011 3
1P
#305
0P
#308
#310
b00000000000000000000000000010101 $
b00000000000000000000000000010101 '
b00000000000000000000000000010101 (
b00000000000000000000000000010100 -
b00000000000000000000000000010100 3
1P
#315
0P
#318
#320
b00000000000000000000000000010110 $
b00000000000000000000000000010110 '
b00000000000000000000000000010110 (
b00000000000000000000000000010101 -
b00000000000000000000000000010101 3
1P
#325
0P
#328
#330
b00000000000000000000000000010111 $
b00000000000000000000000000010111 '
b00000000000000000000000000010111 (
b00000000000000000000000000010110 -
b00000000000000000000000000010110 3
1P
#335
0P
#338
#340
b00000000000000000000000000011000 $
b00000000000000000000000000011000 '
b00000000000000000000000000011000 (
b00000000000000000000000000010111 -
b00000000000000000000000000010111 3
1P
#345
0P
#348
#350
b00000000000000000000000000011001 $
b00000000000000000000000000011001 '
b00000000000000000000000000011001 (
b00000000000000000000000000011000 -
b00000000000000000000000000011000 3
1P
#355
0P
#358
#360
b00000000000000000000000000011010 $
b00000000000000000000000000011010 '
b00000000000000000000000000011010 (
b00000000000000000000000000011001 -
b00000000000000000000000000011001 3
1P
#365
0P
#368
#370
b00000000000000000000000000011011 $
b00000000000000000000000000011011 '
b00000000000000000000000000011011 (
b00000000000000000000000000011010 -
b00000000000000000000000000011010 3
1P
#375
0P
#378
#380
b00000000000000000000000000011100 $
b00000000000000000000000000011100 '
b00000000000000000000000000011100 (
b00000000000000000000000000011011 -
b00000000000000000000000000011011 3
1P
#385
0P
#388
#390
b00000000000000000000000000011101 $
b00000000000000000000000000011101 '
b00000000000000000000000000011101 (
b00000000000000000000000000011100 -
b00000000000000000000000000011100 3
1P
#395
0P
#398
#400
b00000000000000000000000000011110 $
b00000000000000000000000000011110 '
b00000000000000000000000000011110 (
b00000000000000000000000000011101 -
b00000000000000000000000000011101 3
1P
#405
0P
