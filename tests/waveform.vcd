$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 t clk $end
  $var wire 32 v reg_array[0] [31:0] $end
  $var wire 32 "! reg_array[10] [31:0] $end
  $var wire 32 #! reg_array[11] [31:0] $end
  $var wire 32 $! reg_array[12] [31:0] $end
  $var wire 32 %! reg_array[13] [31:0] $end
  $var wire 32 &! reg_array[14] [31:0] $end
  $var wire 32 '! reg_array[15] [31:0] $end
  $var wire 32 (! reg_array[16] [31:0] $end
  $var wire 32 )! reg_array[17] [31:0] $end
  $var wire 32 *! reg_array[18] [31:0] $end
  $var wire 32 +! reg_array[19] [31:0] $end
  $var wire 32 w reg_array[1] [31:0] $end
  $var wire 32 ,! reg_array[20] [31:0] $end
  $var wire 32 -! reg_array[21] [31:0] $end
  $var wire 32 .! reg_array[22] [31:0] $end
  $var wire 32 /! reg_array[23] [31:0] $end
  $var wire 32 0! reg_array[24] [31:0] $end
  $var wire 32 1! reg_array[25] [31:0] $end
  $var wire 32 2! reg_array[26] [31:0] $end
  $var wire 32 3! reg_array[27] [31:0] $end
  $var wire 32 4! reg_array[28] [31:0] $end
  $var wire 32 5! reg_array[29] [31:0] $end
  $var wire 32 x reg_array[2] [31:0] $end
  $var wire 32 6! reg_array[30] [31:0] $end
  $var wire 32 7! reg_array[31] [31:0] $end
  $var wire 32 y reg_array[3] [31:0] $end
  $var wire 32 z reg_array[4] [31:0] $end
  $var wire 32 { reg_array[5] [31:0] $end
  $var wire 32 | reg_array[6] [31:0] $end
  $var wire 32 } reg_array[7] [31:0] $end
  $var wire 32 ~ reg_array[8] [31:0] $end
  $var wire 32 !! reg_array[9] [31:0] $end
  $var wire  1 u reset $end
  $scope module top $end
   $var wire 32 6 address [31:0] $end
   $var wire  1 t clk $end
   $var wire 32 5 curr_inst [31:0] $end
   $var wire  1 = en $end
   $var wire 32 8! in [31:0] $end
   $var wire 32 7 mem_wb[0] [31:0] $end
   $var wire 32 8 mem_wb[1] [31:0] $end
   $var wire 32 9 mem_wb[2] [31:0] $end
   $var wire 32 : mem_wb[3] [31:0] $end
   $var wire 32 ; mem_wb[4] [31:0] $end
   $var wire 32 @! out [31:0] $end
   $var wire 32 $ pc [31:0] $end
   $var wire  1 < r_w $end
   $var wire 32 v reg_array[0] [31:0] $end
   $var wire 32 "! reg_array[10] [31:0] $end
   $var wire 32 #! reg_array[11] [31:0] $end
   $var wire 32 $! reg_array[12] [31:0] $end
   $var wire 32 %! reg_array[13] [31:0] $end
   $var wire 32 &! reg_array[14] [31:0] $end
   $var wire 32 '! reg_array[15] [31:0] $end
   $var wire 32 (! reg_array[16] [31:0] $end
   $var wire 32 )! reg_array[17] [31:0] $end
   $var wire 32 *! reg_array[18] [31:0] $end
   $var wire 32 +! reg_array[19] [31:0] $end
   $var wire 32 w reg_array[1] [31:0] $end
   $var wire 32 ,! reg_array[20] [31:0] $end
   $var wire 32 -! reg_array[21] [31:0] $end
   $var wire 32 .! reg_array[22] [31:0] $end
   $var wire 32 /! reg_array[23] [31:0] $end
   $var wire 32 0! reg_array[24] [31:0] $end
   $var wire 32 1! reg_array[25] [31:0] $end
   $var wire 32 2! reg_array[26] [31:0] $end
   $var wire 32 3! reg_array[27] [31:0] $end
   $var wire 32 4! reg_array[28] [31:0] $end
   $var wire 32 5! reg_array[29] [31:0] $end
   $var wire 32 x reg_array[2] [31:0] $end
   $var wire 32 6! reg_array[30] [31:0] $end
   $var wire 32 7! reg_array[31] [31:0] $end
   $var wire 32 y reg_array[3] [31:0] $end
   $var wire 32 z reg_array[4] [31:0] $end
   $var wire 32 { reg_array[5] [31:0] $end
   $var wire 32 | reg_array[6] [31:0] $end
   $var wire 32 } reg_array[7] [31:0] $end
   $var wire 32 ~ reg_array[8] [31:0] $end
   $var wire 32 !! reg_array[9] [31:0] $end
   $var wire  1 u reset $end
   $scope module core $end
    $var wire  4 e alu_op [3:0] $end
    $var wire  1 a branch_inst $end
    $var wire  1 t clk $end
    $var wire 32 5 curr_inst [31:0] $end
    $var wire  4 ` current_func [3:0] $end
    $var wire  7 ) current_opcode [6:0] $end
    $var wire  1 c ex_load_inst $end
    $var wire  1 d ex_reg_dest $end
    $var wire  1 = load_inst $end
    $var wire 32 6 mem_address [31:0] $end
    $var wire  1 = mem_enable $end
    $var wire 32 8! mem_input [31:0] $end
    $var wire  1 < mem_r_w $end
    $var wire 32 7 mem_wb[0] [31:0] $end
    $var wire 32 8 mem_wb[1] [31:0] $end
    $var wire 32 9 mem_wb[2] [31:0] $end
    $var wire 32 : mem_wb[3] [31:0] $end
    $var wire 32 ; mem_wb[4] [31:0] $end
    $var wire 32 $ pc [31:0] $end
    $var wire 32 v reg_array[0] [31:0] $end
    $var wire 32 "! reg_array[10] [31:0] $end
    $var wire 32 #! reg_array[11] [31:0] $end
    $var wire 32 $! reg_array[12] [31:0] $end
    $var wire 32 %! reg_array[13] [31:0] $end
    $var wire 32 &! reg_array[14] [31:0] $end
    $var wire 32 '! reg_array[15] [31:0] $end
    $var wire 32 (! reg_array[16] [31:0] $end
    $var wire 32 )! reg_array[17] [31:0] $end
    $var wire 32 *! reg_array[18] [31:0] $end
    $var wire 32 +! reg_array[19] [31:0] $end
    $var wire 32 w reg_array[1] [31:0] $end
    $var wire 32 ,! reg_array[20] [31:0] $end
    $var wire 32 -! reg_array[21] [31:0] $end
    $var wire 32 .! reg_array[22] [31:0] $end
    $var wire 32 /! reg_array[23] [31:0] $end
    $var wire 32 0! reg_array[24] [31:0] $end
    $var wire 32 1! reg_array[25] [31:0] $end
    $var wire 32 2! reg_array[26] [31:0] $end
    $var wire 32 3! reg_array[27] [31:0] $end
    $var wire 32 4! reg_array[28] [31:0] $end
    $var wire 32 5! reg_array[29] [31:0] $end
    $var wire 32 x reg_array[2] [31:0] $end
    $var wire 32 6! reg_array[30] [31:0] $end
    $var wire 32 7! reg_array[31] [31:0] $end
    $var wire 32 y reg_array[3] [31:0] $end
    $var wire 32 z reg_array[4] [31:0] $end
    $var wire 32 { reg_array[5] [31:0] $end
    $var wire 32 | reg_array[6] [31:0] $end
    $var wire 32 } reg_array[7] [31:0] $end
    $var wire 32 ~ reg_array[8] [31:0] $end
    $var wire 32 !! reg_array[9] [31:0] $end
    $var wire  1 < reg_dest $end
    $var wire  1 b reg_reg_inst $end
    $var wire  1 u reset $end
    $scope module cu $end
     $var wire  4 e alu_op [3:0] $end
     $var wire  1 a branch_inst $end
     $var wire  1 t clk $end
     $var wire  4 ` current_func [3:0] $end
     $var wire  7 ) current_opcode [6:0] $end
     $var wire  1 c ex_load_inst $end
     $var wire  1 d ex_reg_dest $end
     $var wire  1 = load_inst $end
     $var wire  1 < reg_dest $end
     $var wire  1 b reg_reg_inst $end
     $var wire  1 u reset $end
    $upscope $end
    $scope module dp $end
     $var wire  4 e alu_op [3:0] $end
     $var wire  1 a branch_inst $end
     $var wire  1 A! branch_taken $end
     $var wire  1 t clk $end
     $var wire 32 5 curr_inst [31:0] $end
     $var wire  4 ` current_func [3:0] $end
     $var wire  7 ) current_opcode [6:0] $end
     $var wire  1 C enable $end
     $var wire  1 c ex_load_inst $end
     $var wire 32 > ex_mem[0] [31:0] $end
     $var wire 32 ? ex_mem[1] [31:0] $end
     $var wire 32 @ ex_mem[2] [31:0] $end
     $var wire 32 A ex_mem[3] [31:0] $end
     $var wire  1 d ex_reg_dest $end
     $var wire  1 \ f_en $end
     $var wire  1 g f_rs1[0] $end
     $var wire  1 h f_rs1[1] $end
     $var wire  1 V f_rs2[0] $end
     $var wire  1 W f_rs2[1] $end
     $var wire  1 X f_rs2[2] $end
     $var wire  1 Y f_rs2[3] $end
     $var wire 32 Z fwd_1 [31:0] $end
     $var wire 32 i fwd_2 [31:0] $end
     $var wire 32 * id_ex[0] [31:0] $end
     $var wire 32 + id_ex[1] [31:0] $end
     $var wire 32 , id_ex[2] [31:0] $end
     $var wire 32 - id_ex[3] [31:0] $end
     $var wire 32 . id_ex[4] [31:0] $end
     $var wire 32 9! if_id[0] [31:0] $end
     $var wire 32 :! if_id[1] [31:0] $end
     $var wire  1 = load_inst $end
     $var wire 32 6 mem_address [31:0] $end
     $var wire  1 = mem_enable $end
     $var wire 32 8! mem_input [31:0] $end
     $var wire  1 < mem_r_w $end
     $var wire 32 7 mem_wb[0] [31:0] $end
     $var wire 32 8 mem_wb[1] [31:0] $end
     $var wire 32 9 mem_wb[2] [31:0] $end
     $var wire 32 : mem_wb[3] [31:0] $end
     $var wire 32 ; mem_wb[4] [31:0] $end
     $var wire 32 $ pc [31:0] $end
     $var wire 32 B! pc_offset_branch [31:0] $end
     $var wire 32 v reg_array[0] [31:0] $end
     $var wire 32 "! reg_array[10] [31:0] $end
     $var wire 32 #! reg_array[11] [31:0] $end
     $var wire 32 $! reg_array[12] [31:0] $end
     $var wire 32 %! reg_array[13] [31:0] $end
     $var wire 32 &! reg_array[14] [31:0] $end
     $var wire 32 '! reg_array[15] [31:0] $end
     $var wire 32 (! reg_array[16] [31:0] $end
     $var wire 32 )! reg_array[17] [31:0] $end
     $var wire 32 *! reg_array[18] [31:0] $end
     $var wire 32 +! reg_array[19] [31:0] $end
     $var wire 32 w reg_array[1] [31:0] $end
     $var wire 32 ,! reg_array[20] [31:0] $end
     $var wire 32 -! reg_array[21] [31:0] $end
     $var wire 32 .! reg_array[22] [31:0] $end
     $var wire 32 /! reg_array[23] [31:0] $end
     $var wire 32 0! reg_array[24] [31:0] $end
     $var wire 32 1! reg_array[25] [31:0] $end
     $var wire 32 2! reg_array[26] [31:0] $end
     $var wire 32 3! reg_array[27] [31:0] $end
     $var wire 32 4! reg_array[28] [31:0] $end
     $var wire 32 5! reg_array[29] [31:0] $end
     $var wire 32 x reg_array[2] [31:0] $end
     $var wire 32 6! reg_array[30] [31:0] $end
     $var wire 32 7! reg_array[31] [31:0] $end
     $var wire 32 y reg_array[3] [31:0] $end
     $var wire 32 z reg_array[4] [31:0] $end
     $var wire 32 { reg_array[5] [31:0] $end
     $var wire 32 | reg_array[6] [31:0] $end
     $var wire 32 } reg_array[7] [31:0] $end
     $var wire 32 ~ reg_array[8] [31:0] $end
     $var wire 32 !! reg_array[9] [31:0] $end
     $var wire  1 < reg_dest $end
     $var wire  1 E! reg_r_w $end
     $var wire  1 b reg_reg_inst $end
     $var wire  5 C! reg_wa [4:0] $end
     $var wire  1 u reset $end
     $var wire 32 [ sb_fwd_2 [31:0] $end
     $var wire  1 f stall $end
     $var wire  2 % stall_counter [1:0] $end
     $var wire 32 D! wa_data [31:0] $end
     $var wire 32 B write_back [31:0] $end
     $scope module fu $end
      $var wire  1 <! e_storeb_en $end
      $var wire 32 6 ex_aluout [31:0] $end
      $var wire  1 P ex_is_load $end
      $var wire 32 E ex_mem_ir [31:0] $end
      $var wire  7 I ex_op [6:0] $end
      $var wire  5 J ex_rd [4:0] $end
      $var wire  5 L ex_rs1 [4:0] $end
      $var wire  1 j ex_rs1_forward $end
      $var wire  1 ;! ex_rs1_match $end
      $var wire  5 M ex_rs2 [4:0] $end
      $var wire  1 ] ex_rs2_forward $end
      $var wire  1 m ex_rs2_match $end
      $var wire  1 \ f_en $end
      $var wire  1 g f_rs1[0] $end
      $var wire  1 h f_rs1[1] $end
      $var wire  1 V f_rs2[0] $end
      $var wire  1 W f_rs2[1] $end
      $var wire  1 X f_rs2[2] $end
      $var wire  1 Y f_rs2[3] $end
      $var wire  4 l fcheck [3:0] $end
      $var wire 32 Z fwd_1 [31:0] $end
      $var wire 32 i fwd_2 [31:0] $end
      $var wire 32 / id_ex_ir [31:0] $end
      $var wire  7 ) id_op [6:0] $end
      $var wire  5 0 id_rs1 [4:0] $end
      $var wire  5 1 id_rs2 [4:0] $end
      $var wire  1 O m_storeb_en $end
      $var wire 32 F mem_aluout [31:0] $end
      $var wire  1 N mem_is_load $end
      $var wire 32 G mem_memout [31:0] $end
      $var wire  7 H mem_op [6:0] $end
      $var wire 32 _ mem_out [31:0] $end
      $var wire  5 K mem_rd [4:0] $end
      $var wire  1 k mem_rs1_forward $end
      $var wire  1 n mem_rs1_match $end
      $var wire  1 ^ mem_rs2_forward $end
      $var wire  1 o mem_rs2_match $end
      $var wire 32 D mem_wb_ir [31:0] $end
      $var wire 32 [ sb_fwd_2 [31:0] $end
     $upscope $end
     $scope module regs $end
      $var wire  1 t clk $end
      $var wire  1 C neg_enable $end
      $var wire 32 =! ra_data [31:0] $end
      $var wire 32 >! rb_data [31:0] $end
      $var wire  5 0 reg_a [4:0] $end
      $var wire 32 v reg_array[0] [31:0] $end
      $var wire 32 "! reg_array[10] [31:0] $end
      $var wire 32 #! reg_array[11] [31:0] $end
      $var wire 32 $! reg_array[12] [31:0] $end
      $var wire 32 %! reg_array[13] [31:0] $end
      $var wire 32 &! reg_array[14] [31:0] $end
      $var wire 32 '! reg_array[15] [31:0] $end
      $var wire 32 (! reg_array[16] [31:0] $end
      $var wire 32 )! reg_array[17] [31:0] $end
      $var wire 32 *! reg_array[18] [31:0] $end
      $var wire 32 +! reg_array[19] [31:0] $end
      $var wire 32 w reg_array[1] [31:0] $end
      $var wire 32 ,! reg_array[20] [31:0] $end
      $var wire 32 -! reg_array[21] [31:0] $end
      $var wire 32 .! reg_array[22] [31:0] $end
      $var wire 32 /! reg_array[23] [31:0] $end
      $var wire 32 0! reg_array[24] [31:0] $end
      $var wire 32 1! reg_array[25] [31:0] $end
      $var wire 32 2! reg_array[26] [31:0] $end
      $var wire 32 3! reg_array[27] [31:0] $end
      $var wire 32 4! reg_array[28] [31:0] $end
      $var wire 32 5! reg_array[29] [31:0] $end
      $var wire 32 x reg_array[2] [31:0] $end
      $var wire 32 6! reg_array[30] [31:0] $end
      $var wire 32 7! reg_array[31] [31:0] $end
      $var wire 32 y reg_array[3] [31:0] $end
      $var wire 32 z reg_array[4] [31:0] $end
      $var wire 32 { reg_array[5] [31:0] $end
      $var wire 32 | reg_array[6] [31:0] $end
      $var wire 32 } reg_array[7] [31:0] $end
      $var wire 32 ~ reg_array[8] [31:0] $end
      $var wire 32 !! reg_array[9] [31:0] $end
      $var wire  5 1 reg_b [4:0] $end
      $var wire  1 E! reg_r_w $end
      $var wire  5 K reg_wa [4:0] $end
      $var wire  1 u reset $end
      $var wire 32 Q wa_data [31:0] $end
     $upscope $end
     $scope module s1 $end
      $var wire  1 R branch_cond $end
      $var wire  1 t clk $end
      $var wire 32 5 curr_inst [31:0] $end
      $var wire  1 f hazard $end
      $var wire 32 9! if_id[0] [31:0] $end
      $var wire 32 :! if_id[1] [31:0] $end
      $var wire 32 5 ir [31:0] $end
      $var wire 32 & npc [31:0] $end
      $var wire 32 $ pc [31:0] $end
      $var wire 32 6 pc_offset_branch [31:0] $end
      $var wire  1 u reset $end
      $var wire  2 % stall_counter [1:0] $end
     $upscope $end
     $scope module s2 $end
      $var wire  1 t clk $end
      $var wire  1 f hazard $end
      $var wire 32 * id_ex[0] [31:0] $end
      $var wire 32 + id_ex[1] [31:0] $end
      $var wire 32 , id_ex[2] [31:0] $end
      $var wire 32 - id_ex[3] [31:0] $end
      $var wire 32 . id_ex[4] [31:0] $end
      $var wire 32 5 if_id_ir [31:0] $end
      $var wire 32 & if_id_npc [31:0] $end
      $var wire  1 S long_immediate $end
      $var wire  1 u reset $end
     $upscope $end
     $scope module s3 $end
      $var wire 32 p alu_a [31:0] $end
      $var wire 32 q alu_b [31:0] $end
      $var wire  4 e alu_op [3:0] $end
      $var wire 32 r alu_out [31:0] $end
      $var wire  1 a branch_inst $end
      $var wire  1 t clk $end
      $var wire  1 c ex_load_inst $end
      $var wire 32 > ex_mem[0] [31:0] $end
      $var wire 32 ? ex_mem[1] [31:0] $end
      $var wire 32 @ ex_mem[2] [31:0] $end
      $var wire 32 A ex_mem[3] [31:0] $end
      $var wire  1 d ex_reg_dest $end
      $var wire  1 \ f_en $end
      $var wire  1 g f_rs1[0] $end
      $var wire  1 h f_rs1[1] $end
      $var wire  1 V f_rs2[0] $end
      $var wire  1 W f_rs2[1] $end
      $var wire  1 X f_rs2[2] $end
      $var wire  1 Y f_rs2[3] $end
      $var wire 32 Z fwd_1 [31:0] $end
      $var wire 32 i fwd_2 [31:0] $end
      $var wire 32 =! id_ex_a [31:0] $end
      $var wire 32 >! id_ex_b [31:0] $end
      $var wire 32 3 id_ex_imm [31:0] $end
      $var wire 32 / id_ex_ir [31:0] $end
      $var wire 32 2 id_ex_npc [31:0] $end
      $var wire 32 ?! reg_b_out [31:0] $end
      $var wire  1 b reg_reg_inst $end
      $var wire  1 u reset $end
      $var wire 32 [ sb_fwd_2 [31:0] $end
      $scope module alu $end
       $var wire 32 p alu_a [31:0] $end
       $var wire 32 q alu_b [31:0] $end
       $var wire  4 e alu_op [3:0] $end
       $var wire 32 r alu_out [31:0] $end
       $var wire 32 2 pc [31:0] $end
      $upscope $end
     $upscope $end
     $scope module s4 $end
      $var wire  1 t clk $end
      $var wire  1 ( e_sb_en $end
      $var wire 32 ' e_sb_fwd [31:0] $end
      $var wire 32 6 ex_mem_alu_output [31:0] $end
      $var wire 32 T ex_mem_b [31:0] $end
      $var wire 32 E ex_mem_ir [31:0] $end
      $var wire  1 = load_inst $end
      $var wire 32 6 mem_address [31:0] $end
      $var wire  1 = mem_enable $end
      $var wire 32 8! mem_input [31:0] $end
      $var wire  1 < mem_r_w $end
      $var wire 32 7 mem_wb[0] [31:0] $end
      $var wire 32 8 mem_wb[1] [31:0] $end
      $var wire 32 9 mem_wb[2] [31:0] $end
      $var wire 32 : mem_wb[3] [31:0] $end
      $var wire 32 ; mem_wb[4] [31:0] $end
      $var wire 32 s reg_b_in [31:0] $end
      $var wire  1 < reg_dest $end
      $var wire  1 u reset $end
      $var wire  1 V sb_en[0] $end
      $var wire  1 W sb_en[1] $end
      $var wire  1 X sb_en[2] $end
      $var wire  1 Y sb_en[3] $end
      $var wire 32 [ sb_fwd [31:0] $end
     $upscope $end
     $scope module su $end
      $var wire 32 / id_ex_ir [31:0] $end
      $var wire  5 4 id_ex_rd [4:0] $end
      $var wire 32 5 if_id_ir [31:0] $end
      $var wire  5 U if_id_rs1 [4:0] $end
      $var wire  1 f stall $end
      $var wire  2 % stall_counter [1:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module im $end
    $var wire 32 $ address [31:0] $end
    $var wire 32 5 read_out [31:0] $end
   $upscope $end
   $scope module memory $end
    $var wire 32 6 address [31:0] $end
    $var wire  1 t clk $end
    $var wire  1 = en $end
    $var wire 32 # i [31:0] $end
    $var wire 32 8! in [31:0] $end
    $var wire 32 G out [31:0] $end
    $var wire  1 < r_w $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
b00000000000000000000001000000000 #
b00000000000000000000000000000000 $
b00 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
0(
b0000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000 0
b00000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
0<
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
0C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b0000000 H
b0000000 I
b00000 J
b00000 K
b00000 L
b00000 M
1N
0O
1P
b00000000000000000000000000000000 Q
0R
0S
b00000000000000000000000000000000 T
b00000 U
0V
0W
0X
0Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
0\
0]
0^
b00000000000000000000000000000000 _
b0000 `
0a
0b
0c
0d
b0000 e
0f
0g
0h
b00000000000000000000000000000000 i
0j
0k
b0000 l
0m
0n
0o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
0t
0u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
0;!
0<!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
0A!
b00000000000000000000000000000000 B!
b00000 C!
b00000000000000000000000000000000 D!
0E!
#10
b00000000000000000000000000000100 $
b00000000000000000000000000000100 &
b00000000000000000001111110010111 5
1S
1t
b00000000000000000001111110010111 9!
b00000000000000000000000000000100 :!
#15
0t
#18
#20
b00000000000000000000000000001000 $
b00000000000000000000000000001000 &
b0010111 )
b00000000000000000000000000000100 ,
b00000000000000000001111110010111 -
b00000000000000000000000000000001 .
b00000000000000000001111110010111 /
b00000000000000000000000000000100 2
b00000000000000000000000000000001 3
b11111 4
b10000000000011111000111110010011 5
0S
b11111 U
b0001 `
b1101 e
b00000000000000000000000000000001 q
b00000000000000000001000000000000 r
1t
b10000000000011111000111110010011 9!
b00000000000000000000000000001000 :!
#25
0t
#28
#30
b00000000000000000000000000001100 $
b00000000000000000000000000001100 &
b0010011 )
b00000000000000000000000000001000 ,
b10000000000011111000111110010011 -
b11111111111111111111100000000000 .
b10000000000011111000111110010011 /
b11111 0
b00000000000000000000000000001000 2
b11111111111111111111100000000000 3
b00000000000000000000000010010111 5
b00000000000000000001000000000000 6
b00000000000000000001111110010111 >
b00000000000000000001000000000000 @
b00000000000000000001111110010111 E
b0010111 I
b11111 J
0P
1S
b00000 U
b00000000000000000001000000000000 Z
1\
b0000 `
b0001 e
1g
1j
b1000 l
b00000000000000000001000000000000 p
b11111111111111111111100000000000 q
b00000000000000000000100000000000 r
1t
b00000000000000000000000010010111 9!
b00000000000000000000000000001100 :!
1;!
#35
0t
#38
#40
b00000000000000000000000000010000 $
b00000000000000000000000000010000 &
b0010111 )
b00000000000000000000000000001100 ,
b00000000000000000000000010010111 -
b00000000000000000000000000000000 .
b00000000000000000000000010010111 /
b00000 0
b00000000000000000000000000001100 2
b00000000000000000000000000000000 3
b00001 4
b01111111110000001000000010010011 5
b00000000000000000000100000000000 6
b00000000000000000001111110010111 7
b00000000000000000001000000000000 8
b10000000000011111000111110010011 >
b00000000000000000000100000000000 @
b00000000000000000001000000000000 B
b00000000000000000001111110010111 D
b10000000000011111000111110010011 E
b00000000000000000001000000000000 F
b0010111 H
b0010011 I
b11111 K
b11111 L
0N
b00000000000000000001000000000000 Q
0S
b00001 U
b00000000000000000000000000000000 Z
0\
b1101 e
0g
0j
b0000 l
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000001000 r
1t
b01111111110000001000000010010011 9!
b00000000000000000000000000010000 :!
0;!
#45
0t
#48
#50
b00000000000000000000000000010100 $
b00000000000000000000000000010100 &
b0010011 )
b00000000000000000000000000010000 ,
b01111111110000001000000010010011 -
b00000000000000000000011111111100 .
b01111111110000001000000010010011 /
b00001 0
b11100 1
b00000000000000000000000000010000 2
b00000000000000000000011111111100 3
b00000000000011111010000100000011 5
b00000000000000000000000000001000 6
b10000000000011111000111110010011 7
b00000000000000000000100000000000 8
b00000000000000000000000010010111 >
b00000000000000000000000000001000 @
b00000000000000000000100000000000 B
b10000000000011111000111110010011 D
b00000000000000000000000010010111 E
b00000000000000000000100000000000 F
b0010011 H
b0010111 I
b00001 J
b00000 L
b00000000000000000000100000000000 Q
b11111 U
b00000000000000000000000000001000 Z
1\
b1000 `
b0001 e
1g
1j
b1000 l
b00000000000000000000000000001000 p
b00000000000000000000011111111100 q
b00000000000000000000100000000100 r
1t
b00000000000000000001000000000000 7!
b00000000000011111010000100000011 9!
b00000000000000000000000000010100 :!
1;!
#55
0t
#58
#60
b00000000000000000000000000011000 $
b00000000000000000000000000011000 &
b0000011 )
b00000000000000000000000000010100 ,
b00000000000011111010000100000011 -
b00000000000000000000000000000000 .
b00000000000011111010000100000011 /
b11111 0
b00000 1
b00000000000000000000000000010100 2
b00000000000000000000000000000000 3
b00010 4
b00000000011000010000000100010011 5
b00000000000000000000100000000100 6
b00000000000000000000000010010111 7
b00000000000000000000000000001000 8
b01111111110000001000000010010011 >
b00000000000000000000100000000100 @
b00000000000000000000000000001000 B
b00000000000000000000000010010111 D
b01111111110000001000000010010011 E
b00000000000000000000000000001000 F
b0010111 H
b0010011 I
b00001 K
b00001 L
b11100 M
b00000000000000000000000000001000 Q
b00010 U
b00000000000000000000000000000000 Z
0\
b0010 `
1c
1f
0g
0j
b0000 l
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
1t
b00000000000000000000100000000000 7!
b00000000011000010000000100010011 9!
b00000000000000000000000000011000 :!
0;!
#65
b00000000000000000000100000000000 *
b00000000000000000000100000000000 p
b00000000000000000000100000000000 r
0t
b00000000000000000000100000000000 =!
#68
#70
b01 %
b0000000 )
b00000000000000000000000000000000 -
b00000000000000000000000000000000 /
b00000 0
b00000 4
b00000000000000000000100000000000 6
b01111111110000001000000010010011 7
b00000000000000000000100000000100 8
1=
b00000000000011111010000100000011 >
b00000000000000000000100000000000 @
b00000000000000000000100000000100 B
b01111111110000001000000010010011 D
b00000000000011111010000100000011 E
b00000000000000000000100000000100 F
b0010011 H
b0000011 I
b00010 J
b11111 L
b00000 M
1P
b00000000000000000000100000000100 Q
b0000 `
0c
b0000 e
b00000000000000000000000000000000 r
1t
b00000000000000000000000000001000 w
#75
b00000000000000000000000000000000 *
b00000000000000000000000000000000 p
0t
b00000000000000000000000000000000 =!
#78
#80
b10 %
b00000000000000000000000000000000 6
b00000000000011111010000100000011 7
b00000000000000000000100000000000 8
b00000000000000010000111100100110 9
b00000000000000000000000000000001 :
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000000000000000000000000000001 B
b00000000000011111010000100000011 D
b00000000000000000000000000000000 E
b00000000000000000000100000000000 F
b00000000000000010000111100100110 G
b0000011 H
b0000000 I
b00000 J
b00010 K
b00000 L
1N
b00000000000000010000111100100110 Q
0f
1t
b00000000000000000000100000000100 w
#85
0t
#88
#90
b00000000000000000000000000011100 $
b00 %
b00000000000000000000000000011100 &
b0010011 )
b00000000000000000000000000011000 ,
b00000000011000010000000100010011 -
b00000000000000000000000000000110 .
b00000000011000010000000100010011 /
b00010 0
b00110 1
b00000000000000000000000000011000 2
b00000000000000000000000000000110 3
b00010 4
b00000000001000001010000000100011 5
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 B
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b0000000 H
b00000 K
b00000000000000000000000000000000 Q
b00001 U
b0001 e
b00000000000000000000000000000110 q
b00000000000000000000000000000110 r
1t
b00000000000000010000111100100110 x
b00000000001000001010000000100011 9!
b00000000000000000000000000011100 :!
#95
b00000000000000010000111100100110 *
b00000000000000010000111100100110 p
b00000000000000010000111100101100 r
0t
b00000000000000010000111100100110 =!
#98
#100
b00000000000000000000000000100000 $
b00000000000000000000000000100000 &
b0100011 )
b00000000000000000000000000011100 ,
b00000000001000001010000000100011 -
b00000000000000000000000000000010 .
b00000000001000001010000000100011 /
b00001 0
b00010 1
b00000000000000000000000000011100 2
b00000000000000000000000000000010 3
b00000 4
b00000000000000001010000110000011 5
b00000000000000010000111100101100 6
b00000000011000010000000100010011 >
b00000000000000010000111100101100 @
b00000000011000010000000100010011 E
b0010011 I
b00010 J
b00010 L
b00110 M
0P
b0010 `
1c
1d
1m
b00000000000000000000000000000000 q
b00000000000000010000111100100110 r
1t
b00000000000000001010000110000011 9!
b00000000000000000000000000100000 :!
#105
b00000000000000000000100000000100 *
b00000000000000010000111100100110 +
b00000000000000000000100000000100 p
b00000000000000000000100000000100 r
0t
b00000000000000000000100000000100 =!
b00000000000000010000111100100110 >!
b00000000000000010000111100100110 ?!
#108
#110
b00000000000000000000000000100100 $
b00000000000000000000000000100100 &
b0000011 )
b00000000000000000000000000100000 ,
b00000000000000001010000110000011 -
b00000000000000000000000000000000 .
b00000000000000001010000110000011 /
b00000 1
b00000000000000000000000000100000 2
b00000000000000000000000000000000 3
b00011 4
b00000000001000011000000110110011 5
b00000000000000000000100000000100 6
b00000000011000010000000100010011 7
b00000000000000010000111100101100 8
1<
1=
b00000000001000001010000000100011 >
b00000000000000000000100000000100 @
b00000000000000010000111100100110 A
b00000000000000010000111100101100 B
b00000000011000010000000100010011 D
b00000000001000001010000000100011 E
b00000000000000010000111100101100 F
b0010011 H
b0100011 I
b00000 J
b00010 K
b00001 L
b00010 M
0N
1O
b00000000000000010000111100101100 Q
b00000000000000010000111100100110 T
b00011 U
1X
b00000000000000010000111100101100 [
0d
1f
b00000000000000010000111100101100 s
1t
b00000000000000010000111100101100 8!
b00000000001000011000000110110011 9!
b00000000000000000000000000100100 :!
#115
b00000000000000000000000000000000 +
0t
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
#118
#120
b01 %
b00000000000000010000111100101100 '
b0000000 )
b00000000000000000000000000000000 -
b00000000000000000000000000000000 /
b00000 0
b00000 4
b00000000001000001010000000100011 7
b00000000000000000000100000000100 8
b00000000000000000000000000000001 :
b00000000000000000000000000000001 ;
0<
b00000000000000001010000110000011 >
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
1C
b00000000001000001010000000100011 D
b00000000000000001010000110000011 E
b00000000000000000000100000000100 F
b0100011 H
b0000011 I
b00011 J
b00000 K
b00000 M
0O
1P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 T
0X
b00000000000000000000000000000000 [
b0000 `
0c
b0000 e
0m
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
1t
b00000000000000010000111100101100 x
b00000000000000000000000000000000 8!
#125
b00000000000000000000000000000000 *
b00000000000000000000000000000000 p
0t
b00000000000000000000000000000000 =!
#128
#130
b10 %
b00000000000000000000000000000000 '
b00000000000000000000000000000000 6
b00000000000000001010000110000011 7
b00000000000000010000111100101100 9
b00000000000000000000000000000000 ;
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000000000000000000000000000001 B
0C
b00000000000000001010000110000011 D
b00000000000000000000000000000000 E
b00000000000000010000111100101100 G
b0000011 H
b0000000 I
b00000 J
b00011 K
b00000 L
1N
b00000000000000010000111100101100 Q
0f
1t
#135
0t
#138
#140
b00000000000000000000000000101000 $
b00 %
b00000000000000000000000000101000 &
b0110011 )
b00000000000000000000000000100100 ,
b00000000001000011000000110110011 -
b00000000000000000000000000000010 .
b00000000001000011000000110110011 /
b00011 0
b00010 1
b00000000000000000000000000100100 2
b00000000000000000000000000000010 3
b00011 4
b00000000001100001010010000100011 5
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 B
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b0000000 H
b00000 K
b00000000000000000000000000000000 Q
b00001 U
1b
b0001 e
1t
b00000000000000010000111100101100 y
b00000000001100001010010000100011 9!
b00000000000000000000000000101000 :!
#145
b00000000000000010000111100101100 *
b00000000000000010000111100101100 +
b00000000000000010000111100101100 p
b00000000000000010000111100101100 q
b00000000000000100001111001011000 r
0t
b00000000000000010000111100101100 =!
b00000000000000010000111100101100 >!
b00000000000000010000111100101100 ?!
#148
#150
b00000000000000000000000000101100 $
b00000000000000000000000000101100 &
b0100011 )
b00000000000000000000000000101000 ,
b00000000001100001010010000100011 -
b00000000000000000000000000000011 .
b00000000001100001010010000100011 /
b00001 0
b00011 1
b00000000000000000000000000101000 2
b00000000000000000000000000000011 3
b01000 4
b00000000000100000000001010010011 5
b00000000000000100001111001011000 6
b00000000001000011000000110110011 >
b00000000000000100001111001011000 @
b00000000000000010000111100101100 A
b00000000001000011000000110110011 E
b0110011 I
b00011 J
b00011 L
b00010 M
0P
b00000000000000010000111100101100 T
b00000 U
b0010 `
0b
1c
1d
1m
b00000000000000000000000000001000 q
b00000000000000010000111100110100 r
b00000000000000010000111100101100 s
1t
b00000000000000010000111100101100 8!
b00000000000100000000001010010011 9!
b00000000000000000000000000101100 :!
#155
b00000000000000000000100000000100 *
b00000000000000000000100000000100 p
b00000000000000000000100000001100 r
0t
b00000000000000000000100000000100 =!
#158
#160
b00000000000000000000000000110000 $
b00000000000000000000000000110000 &
b00000000000000010000111100101100 '
b0010011 )
b00000000000000000000000000101100 ,
b00000000000100000000001010010011 -
b00000000000000000000000000000001 .
b00000000000100000000001010010011 /
b00000 0
b00001 1
b00000000000000000000000000101100 2
b00000000000000000000000000000001 3
b00101 4
b00000000000100000000001100010011 5
b00000000000000000000100000001100 6
b00000000001000011000000110110011 7
b00000000000000100001111001011000 8
1<
1=
b00000000001100001010010000100011 >
b00000000000000000000100000001100 @
b00000000000000100001111001011000 B
b00000000001000011000000110110011 D
b00000000001100001010010000100011 E
b00000000000000100001111001011000 F
b0110011 H
b0100011 I
b01000 J
b00011 K
b00001 L
b00011 M
0N
1O
b00000000000000100001111001011000 Q
1X
b00000000000000100001111001011000 [
b0000 `
0c
0d
0m
b00000000000000000000000000000001 q
b00000000000000000000100000000101 r
b00000000000000100001111001011000 s
1t
b00000000000000100001111001011000 8!
b00000000000100000000001100010011 9!
b00000000000000000000000000110000 :!
#165
b00000000000000000000000000000000 *
b00000000000000000000100000000100 +
b00000000000000000000000000000000 p
b00000000000000000000000000000001 r
0t
b00000000000000000000000000000000 =!
b00000000000000000000100000000100 >!
b00000000000000000000100000000100 ?!
#168
#170
b00000000000000000000000000110100 $
b00000000000000000000000000110100 &
b00000000000000100001111001011000 '
b00000000000000000000000000110000 ,
b00000000000100000000001100010011 -
b00000000000100000000001100010011 /
b00000000000000000000000000110000 2
b00110 4
b00000000000000000000000000000000 5
b00000000000000000000000000000001 6
b00000000001100001010010000100011 7
b00000000000000000000100000001100 8
b00000000000000000000000000000001 :
b00000000000000000000000000000001 ;
0<
0=
b00000000000100000000001010010011 >
b00000000000000000000000000000001 @
b00000000000000000000100000000100 A
b00000000000000000000000000000000 B
1C
b00000000001100001010010000100011 D
b00000000000100000000001010010011 E
b00000000000000000000100000001100 F
b0100011 H
b0010011 I
b00101 J
b01000 K
b00000 L
b00001 M
0O
b00000000000000000000000000000000 Q
b00000000000000000000100000000100 T
0X
b00000000000000000000000000000000 [
b00000000000000000000100000000100 s
1t
b00000000000000100001111001011000 y
b00000000000000000000100000000100 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000110100 :!
#175
0t
#178
#180
b00000000000000000000000000111000 $
b00000000000000000000000000111000 &
b00000000000000000000100000000100 '
b0000000 )
b00000000000000000000000000110100 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000 1
b00000000000000000000000000110100 2
b00000000000000000000000000000000 3
b00000 4
b00000000000100000000001010010011 7
b00000000000000000000000000000001 8
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000100000000001100010011 >
b00000000000000000000000000000001 B
0C
b00000000000100000000001010010011 D
b00000000000100000000001100010011 E
b00000000000000000000000000000001 F
b0010011 H
b00110 J
b00101 K
b00000000000000000000000000000001 Q
b0000 e
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
1t
b00000000000000000000000000111000 :!
#185
b00000000000000000000000000000000 +
0t
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
#188
#190
b00000000000000000000000000111100 $
b00000000000000000000000000111100 &
b00000000000000000000000000111000 ,
b00000000000000000000000000111000 2
b00000000000000000000000000000000 6
b00000000000100000000001100010011 7
b00000000000000000000000000000000 >
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000100000000001100010011 D
b00000000000000000000000000000000 E
b0000000 I
b00000 J
b00110 K
b00000 M
1P
b00000000000000000000000000000000 T
b00000000000000000000000000000000 s
1t
b00000000000000000000000000000001 {
b00000000000000000000000000000000 8!
b00000000000000000000000000111100 :!
#195
0t
#198
#200
b00000000000000000000000001000000 $
b00000000000000000000000001000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000111100 ,
b00000000000000000000000000111100 2
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 B
b00000000000000000000000000000000 D
b00000000000000000000000000000000 F
b0000000 H
b00000 K
1N
b00000000000000000000000000000000 Q
1t
b00000000000000000000000000000001 |
b00000000000000000000000001000000 :!
#205
0t
#208
#210
b00000000000000000000000001000100 $
b00000000000000000000000001000100 &
b00000000000000000000000001000000 ,
b00000000000000000000000001000000 2
1t
b00000000000000000000000001000100 :!
#215
0t
#218
#220
b00000000000000000000000001001000 $
b00000000000000000000000001001000 &
b00000000000000000000000001000100 ,
b00000000000000000000000001000100 2
1t
b00000000000000000000000001001000 :!
#225
0t
#228
#230
b00000000000000000000000001001100 $
b00000000000000000000000001001100 &
b00000000000000000000000001001000 ,
b00000000000000000000000001001000 2
1t
b00000000000000000000000001001100 :!
#235
0t
#238
#240
b00000000000000000000000001010000 $
b00000000000000000000000001010000 &
b00000000000000000000000001001100 ,
b00000000000000000000000001001100 2
1t
b00000000000000000000000001010000 :!
#245
0t
#248
#250
b00000000000000000000000001010100 $
b00000000000000000000000001010100 &
b00000000000000000000000001010000 ,
b00000000000000000000000001010000 2
1t
b00000000000000000000000001010100 :!
#255
0t
#258
#260
b00000000000000000000000001011000 $
b00000000000000000000000001011000 &
b00000000000000000000000001010100 ,
b00000000000000000000000001010100 2
1t
b00000000000000000000000001011000 :!
#265
0t
#268
#270
b00000000000000000000000001011100 $
b00000000000000000000000001011100 &
b00000000000000000000000001011000 ,
b00000000000000000000000001011000 2
1t
b00000000000000000000000001011100 :!
#275
0t
#278
#280
b00000000000000000000000001100000 $
b00000000000000000000000001100000 &
b00000000000000000000000001011100 ,
b00000000000000000000000001011100 2
1t
b00000000000000000000000001100000 :!
#285
0t
#288
#290
b00000000000000000000000001100100 $
b00000000000000000000000001100100 &
b00000000000000000000000001100000 ,
b00000000000000000000000001100000 2
1t
b00000000000000000000000001100100 :!
#295
0t
#298
#300
b00000000000000000000000001101000 $
b00000000000000000000000001101000 &
b00000000000000000000000001100100 ,
b00000000000000000000000001100100 2
1t
b00000000000000000000000001101000 :!
#305
0t
#308
#310
b00000000000000000000000001101100 $
b00000000000000000000000001101100 &
b00000000000000000000000001101000 ,
b00000000000000000000000001101000 2
1t
b00000000000000000000000001101100 :!
#315
0t
#318
#320
b00000000000000000000000001110000 $
b00000000000000000000000001110000 &
b00000000000000000000000001101100 ,
b00000000000000000000000001101100 2
1t
b00000000000000000000000001110000 :!
#325
0t
#328
#330
b00000000000000000000000001110100 $
b00000000000000000000000001110100 &
b00000000000000000000000001110000 ,
b00000000000000000000000001110000 2
1t
b00000000000000000000000001110100 :!
#335
0t
#338
#340
b00000000000000000000000001111000 $
b00000000000000000000000001111000 &
b00000000000000000000000001110100 ,
b00000000000000000000000001110100 2
1t
b00000000000000000000000001111000 :!
#345
0t
#348
#350
b00000000000000000000000001111100 $
b00000000000000000000000001111100 &
b00000000000000000000000001111000 ,
b00000000000000000000000001111000 2
1t
b00000000000000000000000001111100 :!
#355
0t
#358
#360
b00000000000000000000000010000000 $
b00000000000000000000000010000000 &
b00000000000000000000000001111100 ,
b00000000000000000000000001111100 2
1t
b00000000000000000000000010000000 :!
#365
0t
#368
#370
b00000000000000000000000010000100 $
b00000000000000000000000010000100 &
b00000000000000000000000010000000 ,
b00000000000000000000000010000000 2
1t
b00000000000000000000000010000100 :!
#375
0t
#378
#380
b00000000000000000000000010001000 $
b00000000000000000000000010001000 &
b00000000000000000000000010000100 ,
b00000000000000000000000010000100 2
1t
b00000000000000000000000010001000 :!
#385
0t
#388
#390
b00000000000000000000000010001100 $
b00000000000000000000000010001100 &
b00000000000000000000000010001000 ,
b00000000000000000000000010001000 2
1t
b00000000000000000000000010001100 :!
#395
0t
#398
#400
b00000000000000000000000010010000 $
b00000000000000000000000010010000 &
b00000000000000000000000010001100 ,
b00000000000000000000000010001100 2
1t
b00000000000000000000000010010000 :!
#405
0t
