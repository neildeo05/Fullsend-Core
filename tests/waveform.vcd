$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 u clk $end
  $var wire 32 w reg_array[0] [31:0] $end
  $var wire 32 #! reg_array[10] [31:0] $end
  $var wire 32 $! reg_array[11] [31:0] $end
  $var wire 32 %! reg_array[12] [31:0] $end
  $var wire 32 &! reg_array[13] [31:0] $end
  $var wire 32 '! reg_array[14] [31:0] $end
  $var wire 32 (! reg_array[15] [31:0] $end
  $var wire 32 )! reg_array[16] [31:0] $end
  $var wire 32 *! reg_array[17] [31:0] $end
  $var wire 32 +! reg_array[18] [31:0] $end
  $var wire 32 ,! reg_array[19] [31:0] $end
  $var wire 32 x reg_array[1] [31:0] $end
  $var wire 32 -! reg_array[20] [31:0] $end
  $var wire 32 .! reg_array[21] [31:0] $end
  $var wire 32 /! reg_array[22] [31:0] $end
  $var wire 32 0! reg_array[23] [31:0] $end
  $var wire 32 1! reg_array[24] [31:0] $end
  $var wire 32 2! reg_array[25] [31:0] $end
  $var wire 32 3! reg_array[26] [31:0] $end
  $var wire 32 4! reg_array[27] [31:0] $end
  $var wire 32 5! reg_array[28] [31:0] $end
  $var wire 32 6! reg_array[29] [31:0] $end
  $var wire 32 y reg_array[2] [31:0] $end
  $var wire 32 7! reg_array[30] [31:0] $end
  $var wire 32 8! reg_array[31] [31:0] $end
  $var wire 32 z reg_array[3] [31:0] $end
  $var wire 32 { reg_array[4] [31:0] $end
  $var wire 32 | reg_array[5] [31:0] $end
  $var wire 32 } reg_array[6] [31:0] $end
  $var wire 32 ~ reg_array[7] [31:0] $end
  $var wire 32 !! reg_array[8] [31:0] $end
  $var wire 32 "! reg_array[9] [31:0] $end
  $var wire  1 v reset $end
  $scope module top $end
   $var wire 32 7 address [31:0] $end
   $var wire  1 u clk $end
   $var wire 32 6 curr_inst [31:0] $end
   $var wire  1 > en $end
   $var wire 32 9! in [31:0] $end
   $var wire 32 8 mem_wb[0] [31:0] $end
   $var wire 32 9 mem_wb[1] [31:0] $end
   $var wire 32 : mem_wb[2] [31:0] $end
   $var wire 32 ; mem_wb[3] [31:0] $end
   $var wire 32 < mem_wb[4] [31:0] $end
   $var wire 32 A! out [31:0] $end
   $var wire 32 $ pc [31:0] $end
   $var wire  1 = r_w $end
   $var wire 32 w reg_array[0] [31:0] $end
   $var wire 32 #! reg_array[10] [31:0] $end
   $var wire 32 $! reg_array[11] [31:0] $end
   $var wire 32 %! reg_array[12] [31:0] $end
   $var wire 32 &! reg_array[13] [31:0] $end
   $var wire 32 '! reg_array[14] [31:0] $end
   $var wire 32 (! reg_array[15] [31:0] $end
   $var wire 32 )! reg_array[16] [31:0] $end
   $var wire 32 *! reg_array[17] [31:0] $end
   $var wire 32 +! reg_array[18] [31:0] $end
   $var wire 32 ,! reg_array[19] [31:0] $end
   $var wire 32 x reg_array[1] [31:0] $end
   $var wire 32 -! reg_array[20] [31:0] $end
   $var wire 32 .! reg_array[21] [31:0] $end
   $var wire 32 /! reg_array[22] [31:0] $end
   $var wire 32 0! reg_array[23] [31:0] $end
   $var wire 32 1! reg_array[24] [31:0] $end
   $var wire 32 2! reg_array[25] [31:0] $end
   $var wire 32 3! reg_array[26] [31:0] $end
   $var wire 32 4! reg_array[27] [31:0] $end
   $var wire 32 5! reg_array[28] [31:0] $end
   $var wire 32 6! reg_array[29] [31:0] $end
   $var wire 32 y reg_array[2] [31:0] $end
   $var wire 32 7! reg_array[30] [31:0] $end
   $var wire 32 8! reg_array[31] [31:0] $end
   $var wire 32 z reg_array[3] [31:0] $end
   $var wire 32 { reg_array[4] [31:0] $end
   $var wire 32 | reg_array[5] [31:0] $end
   $var wire 32 } reg_array[6] [31:0] $end
   $var wire 32 ~ reg_array[7] [31:0] $end
   $var wire 32 !! reg_array[8] [31:0] $end
   $var wire 32 "! reg_array[9] [31:0] $end
   $var wire  1 v reset $end
   $scope module core $end
    $var wire  5 f alu_op [4:0] $end
    $var wire  1 b branch_inst $end
    $var wire  1 u clk $end
    $var wire 32 6 curr_inst [31:0] $end
    $var wire  4 a current_func [3:0] $end
    $var wire  7 ) current_opcode [6:0] $end
    $var wire  1 d ex_load_inst $end
    $var wire  1 e ex_reg_dest $end
    $var wire  1 > load_inst $end
    $var wire 32 7 mem_address [31:0] $end
    $var wire  1 > mem_enable $end
    $var wire 32 9! mem_input [31:0] $end
    $var wire  1 = mem_r_w $end
    $var wire 32 8 mem_wb[0] [31:0] $end
    $var wire 32 9 mem_wb[1] [31:0] $end
    $var wire 32 : mem_wb[2] [31:0] $end
    $var wire 32 ; mem_wb[3] [31:0] $end
    $var wire 32 < mem_wb[4] [31:0] $end
    $var wire  1 * mul_inst $end
    $var wire 32 $ pc [31:0] $end
    $var wire 32 w reg_array[0] [31:0] $end
    $var wire 32 #! reg_array[10] [31:0] $end
    $var wire 32 $! reg_array[11] [31:0] $end
    $var wire 32 %! reg_array[12] [31:0] $end
    $var wire 32 &! reg_array[13] [31:0] $end
    $var wire 32 '! reg_array[14] [31:0] $end
    $var wire 32 (! reg_array[15] [31:0] $end
    $var wire 32 )! reg_array[16] [31:0] $end
    $var wire 32 *! reg_array[17] [31:0] $end
    $var wire 32 +! reg_array[18] [31:0] $end
    $var wire 32 ,! reg_array[19] [31:0] $end
    $var wire 32 x reg_array[1] [31:0] $end
    $var wire 32 -! reg_array[20] [31:0] $end
    $var wire 32 .! reg_array[21] [31:0] $end
    $var wire 32 /! reg_array[22] [31:0] $end
    $var wire 32 0! reg_array[23] [31:0] $end
    $var wire 32 1! reg_array[24] [31:0] $end
    $var wire 32 2! reg_array[25] [31:0] $end
    $var wire 32 3! reg_array[26] [31:0] $end
    $var wire 32 4! reg_array[27] [31:0] $end
    $var wire 32 5! reg_array[28] [31:0] $end
    $var wire 32 6! reg_array[29] [31:0] $end
    $var wire 32 y reg_array[2] [31:0] $end
    $var wire 32 7! reg_array[30] [31:0] $end
    $var wire 32 8! reg_array[31] [31:0] $end
    $var wire 32 z reg_array[3] [31:0] $end
    $var wire 32 { reg_array[4] [31:0] $end
    $var wire 32 | reg_array[5] [31:0] $end
    $var wire 32 } reg_array[6] [31:0] $end
    $var wire 32 ~ reg_array[7] [31:0] $end
    $var wire 32 !! reg_array[8] [31:0] $end
    $var wire 32 "! reg_array[9] [31:0] $end
    $var wire  1 = reg_dest $end
    $var wire  1 c reg_reg_inst $end
    $var wire  1 v reset $end
    $scope module cu $end
     $var wire  5 f alu_op [4:0] $end
     $var wire  1 b branch_inst $end
     $var wire  1 u clk $end
     $var wire  4 a current_func [3:0] $end
     $var wire  7 ) current_opcode [6:0] $end
     $var wire  1 d ex_load_inst $end
     $var wire  1 e ex_reg_dest $end
     $var wire  1 > load_inst $end
     $var wire  1 * mul_inst $end
     $var wire  1 = reg_dest $end
     $var wire  1 c reg_reg_inst $end
     $var wire  1 v reset $end
    $upscope $end
    $scope module dp $end
     $var wire  5 f alu_op [4:0] $end
     $var wire  1 b branch_inst $end
     $var wire  1 B! branch_taken $end
     $var wire  1 u clk $end
     $var wire 32 6 curr_inst [31:0] $end
     $var wire  4 a current_func [3:0] $end
     $var wire  7 ) current_opcode [6:0] $end
     $var wire  1 D enable $end
     $var wire  1 d ex_load_inst $end
     $var wire 32 ? ex_mem[0] [31:0] $end
     $var wire 32 @ ex_mem[1] [31:0] $end
     $var wire 32 A ex_mem[2] [31:0] $end
     $var wire 32 B ex_mem[3] [31:0] $end
     $var wire  1 e ex_reg_dest $end
     $var wire  1 ] f_en $end
     $var wire  1 h f_rs1[0] $end
     $var wire  1 i f_rs1[1] $end
     $var wire  1 W f_rs2[0] $end
     $var wire  1 X f_rs2[1] $end
     $var wire  1 Y f_rs2[2] $end
     $var wire  1 Z f_rs2[3] $end
     $var wire 32 [ fwd_1 [31:0] $end
     $var wire 32 j fwd_2 [31:0] $end
     $var wire 32 + id_ex[0] [31:0] $end
     $var wire 32 , id_ex[1] [31:0] $end
     $var wire 32 - id_ex[2] [31:0] $end
     $var wire 32 . id_ex[3] [31:0] $end
     $var wire 32 / id_ex[4] [31:0] $end
     $var wire 32 :! if_id[0] [31:0] $end
     $var wire 32 ;! if_id[1] [31:0] $end
     $var wire  1 > load_inst $end
     $var wire 32 7 mem_address [31:0] $end
     $var wire  1 > mem_enable $end
     $var wire 32 9! mem_input [31:0] $end
     $var wire  1 = mem_r_w $end
     $var wire 32 8 mem_wb[0] [31:0] $end
     $var wire 32 9 mem_wb[1] [31:0] $end
     $var wire 32 : mem_wb[2] [31:0] $end
     $var wire 32 ; mem_wb[3] [31:0] $end
     $var wire 32 < mem_wb[4] [31:0] $end
     $var wire  1 * mul_inst $end
     $var wire 32 $ pc [31:0] $end
     $var wire 32 C! pc_offset_branch [31:0] $end
     $var wire 32 w reg_array[0] [31:0] $end
     $var wire 32 #! reg_array[10] [31:0] $end
     $var wire 32 $! reg_array[11] [31:0] $end
     $var wire 32 %! reg_array[12] [31:0] $end
     $var wire 32 &! reg_array[13] [31:0] $end
     $var wire 32 '! reg_array[14] [31:0] $end
     $var wire 32 (! reg_array[15] [31:0] $end
     $var wire 32 )! reg_array[16] [31:0] $end
     $var wire 32 *! reg_array[17] [31:0] $end
     $var wire 32 +! reg_array[18] [31:0] $end
     $var wire 32 ,! reg_array[19] [31:0] $end
     $var wire 32 x reg_array[1] [31:0] $end
     $var wire 32 -! reg_array[20] [31:0] $end
     $var wire 32 .! reg_array[21] [31:0] $end
     $var wire 32 /! reg_array[22] [31:0] $end
     $var wire 32 0! reg_array[23] [31:0] $end
     $var wire 32 1! reg_array[24] [31:0] $end
     $var wire 32 2! reg_array[25] [31:0] $end
     $var wire 32 3! reg_array[26] [31:0] $end
     $var wire 32 4! reg_array[27] [31:0] $end
     $var wire 32 5! reg_array[28] [31:0] $end
     $var wire 32 6! reg_array[29] [31:0] $end
     $var wire 32 y reg_array[2] [31:0] $end
     $var wire 32 7! reg_array[30] [31:0] $end
     $var wire 32 8! reg_array[31] [31:0] $end
     $var wire 32 z reg_array[3] [31:0] $end
     $var wire 32 { reg_array[4] [31:0] $end
     $var wire 32 | reg_array[5] [31:0] $end
     $var wire 32 } reg_array[6] [31:0] $end
     $var wire 32 ~ reg_array[7] [31:0] $end
     $var wire 32 !! reg_array[8] [31:0] $end
     $var wire 32 "! reg_array[9] [31:0] $end
     $var wire  1 = reg_dest $end
     $var wire  1 F! reg_r_w $end
     $var wire  1 c reg_reg_inst $end
     $var wire  5 D! reg_wa [4:0] $end
     $var wire  1 v reset $end
     $var wire 32 \ sb_fwd_2 [31:0] $end
     $var wire  1 g stall $end
     $var wire  2 % stall_counter [1:0] $end
     $var wire 32 E! wa_data [31:0] $end
     $var wire 32 C write_back [31:0] $end
     $scope module fu $end
      $var wire  1 =! e_storeb_en $end
      $var wire 32 7 ex_aluout [31:0] $end
      $var wire  1 Q ex_is_load $end
      $var wire 32 F ex_mem_ir [31:0] $end
      $var wire  7 J ex_op [6:0] $end
      $var wire  5 K ex_rd [4:0] $end
      $var wire  5 M ex_rs1 [4:0] $end
      $var wire  1 k ex_rs1_forward $end
      $var wire  1 <! ex_rs1_match $end
      $var wire  5 N ex_rs2 [4:0] $end
      $var wire  1 ^ ex_rs2_forward $end
      $var wire  1 n ex_rs2_match $end
      $var wire  1 ] f_en $end
      $var wire  1 h f_rs1[0] $end
      $var wire  1 i f_rs1[1] $end
      $var wire  1 W f_rs2[0] $end
      $var wire  1 X f_rs2[1] $end
      $var wire  1 Y f_rs2[2] $end
      $var wire  1 Z f_rs2[3] $end
      $var wire  4 m fcheck [3:0] $end
      $var wire 32 [ fwd_1 [31:0] $end
      $var wire 32 j fwd_2 [31:0] $end
      $var wire 32 0 id_ex_ir [31:0] $end
      $var wire  7 ) id_op [6:0] $end
      $var wire  5 1 id_rs1 [4:0] $end
      $var wire  5 2 id_rs2 [4:0] $end
      $var wire  1 P m_storeb_en $end
      $var wire 32 G mem_aluout [31:0] $end
      $var wire  1 O mem_is_load $end
      $var wire 32 H mem_memout [31:0] $end
      $var wire  7 I mem_op [6:0] $end
      $var wire 32 ` mem_out [31:0] $end
      $var wire  5 L mem_rd [4:0] $end
      $var wire  1 l mem_rs1_forward $end
      $var wire  1 o mem_rs1_match $end
      $var wire  1 _ mem_rs2_forward $end
      $var wire  1 p mem_rs2_match $end
      $var wire 32 E mem_wb_ir [31:0] $end
      $var wire 32 \ sb_fwd_2 [31:0] $end
     $upscope $end
     $scope module regs $end
      $var wire  1 u clk $end
      $var wire  1 D neg_enable $end
      $var wire 32 >! ra_data [31:0] $end
      $var wire 32 ?! rb_data [31:0] $end
      $var wire  5 1 reg_a [4:0] $end
      $var wire 32 w reg_array[0] [31:0] $end
      $var wire 32 #! reg_array[10] [31:0] $end
      $var wire 32 $! reg_array[11] [31:0] $end
      $var wire 32 %! reg_array[12] [31:0] $end
      $var wire 32 &! reg_array[13] [31:0] $end
      $var wire 32 '! reg_array[14] [31:0] $end
      $var wire 32 (! reg_array[15] [31:0] $end
      $var wire 32 )! reg_array[16] [31:0] $end
      $var wire 32 *! reg_array[17] [31:0] $end
      $var wire 32 +! reg_array[18] [31:0] $end
      $var wire 32 ,! reg_array[19] [31:0] $end
      $var wire 32 x reg_array[1] [31:0] $end
      $var wire 32 -! reg_array[20] [31:0] $end
      $var wire 32 .! reg_array[21] [31:0] $end
      $var wire 32 /! reg_array[22] [31:0] $end
      $var wire 32 0! reg_array[23] [31:0] $end
      $var wire 32 1! reg_array[24] [31:0] $end
      $var wire 32 2! reg_array[25] [31:0] $end
      $var wire 32 3! reg_array[26] [31:0] $end
      $var wire 32 4! reg_array[27] [31:0] $end
      $var wire 32 5! reg_array[28] [31:0] $end
      $var wire 32 6! reg_array[29] [31:0] $end
      $var wire 32 y reg_array[2] [31:0] $end
      $var wire 32 7! reg_array[30] [31:0] $end
      $var wire 32 8! reg_array[31] [31:0] $end
      $var wire 32 z reg_array[3] [31:0] $end
      $var wire 32 { reg_array[4] [31:0] $end
      $var wire 32 | reg_array[5] [31:0] $end
      $var wire 32 } reg_array[6] [31:0] $end
      $var wire 32 ~ reg_array[7] [31:0] $end
      $var wire 32 !! reg_array[8] [31:0] $end
      $var wire 32 "! reg_array[9] [31:0] $end
      $var wire  5 2 reg_b [4:0] $end
      $var wire  1 F! reg_r_w $end
      $var wire  5 L reg_wa [4:0] $end
      $var wire  1 v reset $end
      $var wire 32 R wa_data [31:0] $end
     $upscope $end
     $scope module s1 $end
      $var wire  1 S branch_cond $end
      $var wire  1 u clk $end
      $var wire 32 6 curr_inst [31:0] $end
      $var wire  1 g hazard $end
      $var wire 32 :! if_id[0] [31:0] $end
      $var wire 32 ;! if_id[1] [31:0] $end
      $var wire 32 6 ir [31:0] $end
      $var wire 32 & npc [31:0] $end
      $var wire 32 $ pc [31:0] $end
      $var wire 32 7 pc_offset_branch [31:0] $end
      $var wire  1 v reset $end
      $var wire  2 % stall_counter [1:0] $end
     $upscope $end
     $scope module s2 $end
      $var wire  1 u clk $end
      $var wire  1 g hazard $end
      $var wire 32 + id_ex[0] [31:0] $end
      $var wire 32 , id_ex[1] [31:0] $end
      $var wire 32 - id_ex[2] [31:0] $end
      $var wire 32 . id_ex[3] [31:0] $end
      $var wire 32 / id_ex[4] [31:0] $end
      $var wire 32 6 if_id_ir [31:0] $end
      $var wire 32 & if_id_npc [31:0] $end
      $var wire  1 T long_immediate $end
      $var wire  1 v reset $end
     $upscope $end
     $scope module s3 $end
      $var wire 32 q alu_a [31:0] $end
      $var wire 32 r alu_b [31:0] $end
      $var wire  5 f alu_op [4:0] $end
      $var wire 32 s alu_out [31:0] $end
      $var wire  1 b branch_inst $end
      $var wire  1 u clk $end
      $var wire  1 d ex_load_inst $end
      $var wire 32 ? ex_mem[0] [31:0] $end
      $var wire 32 @ ex_mem[1] [31:0] $end
      $var wire 32 A ex_mem[2] [31:0] $end
      $var wire 32 B ex_mem[3] [31:0] $end
      $var wire  1 e ex_reg_dest $end
      $var wire  1 ] f_en $end
      $var wire  1 h f_rs1[0] $end
      $var wire  1 i f_rs1[1] $end
      $var wire  1 W f_rs2[0] $end
      $var wire  1 X f_rs2[1] $end
      $var wire  1 Y f_rs2[2] $end
      $var wire  1 Z f_rs2[3] $end
      $var wire 32 [ fwd_1 [31:0] $end
      $var wire 32 j fwd_2 [31:0] $end
      $var wire 32 >! id_ex_a [31:0] $end
      $var wire 32 ?! id_ex_b [31:0] $end
      $var wire 32 4 id_ex_imm [31:0] $end
      $var wire 32 0 id_ex_ir [31:0] $end
      $var wire 32 3 id_ex_npc [31:0] $end
      $var wire 32 @! reg_b_out [31:0] $end
      $var wire  1 c reg_reg_inst $end
      $var wire  1 v reset $end
      $var wire 32 \ sb_fwd_2 [31:0] $end
      $scope module alu $end
       $var wire 32 q alu_a [31:0] $end
       $var wire 32 r alu_b [31:0] $end
       $var wire  5 f alu_op [4:0] $end
       $var wire 32 s alu_out [31:0] $end
       $var wire 32 3 pc [31:0] $end
      $upscope $end
     $upscope $end
     $scope module s4 $end
      $var wire  1 u clk $end
      $var wire  1 ( e_sb_en $end
      $var wire 32 ' e_sb_fwd [31:0] $end
      $var wire 32 7 ex_mem_alu_output [31:0] $end
      $var wire 32 U ex_mem_b [31:0] $end
      $var wire 32 F ex_mem_ir [31:0] $end
      $var wire  1 > load_inst $end
      $var wire 32 7 mem_address [31:0] $end
      $var wire  1 > mem_enable $end
      $var wire 32 9! mem_input [31:0] $end
      $var wire  1 = mem_r_w $end
      $var wire 32 8 mem_wb[0] [31:0] $end
      $var wire 32 9 mem_wb[1] [31:0] $end
      $var wire 32 : mem_wb[2] [31:0] $end
      $var wire 32 ; mem_wb[3] [31:0] $end
      $var wire 32 < mem_wb[4] [31:0] $end
      $var wire 32 t reg_b_in [31:0] $end
      $var wire  1 = reg_dest $end
      $var wire  1 v reset $end
      $var wire  1 W sb_en[0] $end
      $var wire  1 X sb_en[1] $end
      $var wire  1 Y sb_en[2] $end
      $var wire  1 Z sb_en[3] $end
      $var wire 32 \ sb_fwd [31:0] $end
     $upscope $end
     $scope module su $end
      $var wire 32 0 id_ex_ir [31:0] $end
      $var wire  5 5 id_ex_rd [4:0] $end
      $var wire 32 6 if_id_ir [31:0] $end
      $var wire  5 V if_id_rs1 [4:0] $end
      $var wire  1 g stall $end
      $var wire  2 % stall_counter [1:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module im $end
    $var wire 32 $ address [31:0] $end
    $var wire 32 6 read_out [31:0] $end
   $upscope $end
   $scope module memory $end
    $var wire 32 7 address [31:0] $end
    $var wire  1 u clk $end
    $var wire  1 > en $end
    $var wire 32 # i [31:0] $end
    $var wire 32 9! in [31:0] $end
    $var wire 32 H out [31:0] $end
    $var wire  1 = r_w $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
b00000000000000000000001000000000 #
b00000000000000000000000000000000 $
b00 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
0(
b0000000 )
0*
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 1
b00000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
0=
0>
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
0D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b0000000 I
b0000000 J
b00000 K
b00000 L
b00000 M
b00000 N
1O
0P
1Q
b00000000000000000000000000000000 R
0S
0T
b00000000000000000000000000000000 U
b00000 V
0W
0X
0Y
0Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
0]
0^
0_
b00000000000000000000000000000000 `
b0000 a
0b
0c
0d
0e
b00000 f
0g
0h
0i
b00000000000000000000000000000000 j
0k
0l
b0000 m
0n
0o
0p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
0u
0v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
0<!
0=!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
0B!
b00000000000000000000000000000000 C!
b00000 D!
b00000000000000000000000000000000 E!
0F!
#10
b00000000000000000000000000000100 $
b00000000000000000000000000000100 &
b00000000000000000001010110010111 6
1T
1u
b00000000000000000001010110010111 :!
b00000000000000000000000000000100 ;!
#15
0u
#18
#20
b00000000000000000000000000001000 $
b00000000000000000000000000001000 &
b0010111 )
b00000000000000000000000000000100 -
b00000000000000000001010110010111 .
b00000000000000000000000000000001 /
b00000000000000000001010110010111 0
b00000000000000000000000000000100 3
b00000000000000000000000000000001 4
b01011 5
b10000000000001011000010110010011 6
0T
b01011 V
b0001 a
b01101 f
b00000000000000000000000000000001 r
b00000000000000000001000000000000 s
1u
b10000000000001011000010110010011 :!
b00000000000000000000000000001000 ;!
#25
0u
#28
#30
b00000000000000000000000000001100 $
b00000000000000000000000000001100 &
b0010011 )
b00000000000000000000000000001000 -
b10000000000001011000010110010011 .
b11111111111111111111100000000000 /
b10000000000001011000010110010011 0
b01011 1
b00000000000000000000000000001000 3
b11111111111111111111100000000000 4
b00000000110000000000011000010011 6
b00000000000000000001000000000000 7
b00000000000000000001010110010111 ?
b00000000000000000001000000000000 A
b00000000000000000001010110010111 F
b0010111 J
b01011 K
0Q
b00000 V
b00000000000000000001000000000000 [
1]
b0000 a
b00001 f
1h
1k
b1000 m
b00000000000000000001000000000000 q
b11111111111111111111100000000000 r
b00000000000000000000100000000000 s
1u
b00000000110000000000011000010011 :!
b00000000000000000000000000001100 ;!
1<!
#35
0u
#38
#40
b00000000000000000000000000010000 $
b00000000000000000000000000010000 &
b00000000000000000000000000001100 -
b00000000110000000000011000010011 .
b00000000000000000000000000001100 /
b00000000110000000000011000010011 0
b00000 1
b01100 2
b00000000000000000000000000001100 3
b00000000000000000000000000001100 4
b01100 5
b00000000110001011010000000100011 6
b00000000000000000000100000000000 7
b00000000000000000001010110010111 8
b00000000000000000001000000000000 9
b10000000000001011000010110010011 ?
b00000000000000000000100000000000 A
b00000000000000000001000000000000 C
b00000000000000000001010110010111 E
b10000000000001011000010110010011 F
b00000000000000000001000000000000 G
b0010111 I
b0010011 J
b01011 L
b01011 M
0O
b00000000000000000001000000000000 R
b01011 V
b00000000000000000000000000000000 [
0]
0h
0k
b0000 m
b00000000000000000000000000000000 q
b00000000000000000000000000001100 r
b00000000000000000000000000001100 s
1u
b00000000110001011010000000100011 :!
b00000000000000000000000000010000 ;!
0<!
#45
0u
#48
#50
b00000000000000000000000000010100 $
b00000000000000000000000000010100 &
b0100011 )
b00000000000000000000000000010000 -
b00000000110001011010000000100011 .
b00000000110001011010000000100011 0
b01011 1
b00000000000000000000000000010000 3
b00000 5
b00000000000001011010000010000011 6
b00000000000000000000000000001100 7
b10000000000001011000010110010011 8
b00000000000000000000100000000000 9
b00000000110000000000011000010011 ?
b00000000000000000000000000001100 A
b00000000000000000000100000000000 C
b10000000000001011000010110010011 E
b00000000110000000000011000010011 F
b00000000000000000000100000000000 G
b0010011 I
b01100 K
b00000 M
b01100 N
b00000000000000000000100000000000 R
b00000000000000000000100000000000 [
1]
b00000000000000000000100000000000 `
b0010 a
1d
1e
1i
1l
b0100 m
1n
1o
b00000000000000000000100000000000 q
b00000000000000000000000000000000 r
b00000000000000000000100000000000 s
1u
b00000000000000000001000000000000 $!
b00000000000001011010000010000011 :!
b00000000000000000000000000010100 ;!
#55
b00000000000000000001000000000000 +
0u
b00000000000000000001000000000000 >!
#58
#60
b00000000000000000000000000011000 $
b00000000000000000000000000011000 &
b0000011 )
b00000000000000000000000000010100 -
b00000000000001011010000010000011 .
b00000000000000000000000000000000 /
b00000000000001011010000010000011 0
b00000 2
b00000000000000000000000000010100 3
b00000000000000000000000000000000 4
b00001 5
b00000010110000001100010100110011 6
b00000000000000000000100000000000 7
b00000000110000000000011000010011 8
b00000000000000000000000000001100 9
1=
1>
b00000000110001011010000000100011 ?
b00000000000000000000100000000000 A
b00000000000000000000000000001100 C
b00000000110000000000011000010011 E
b00000000110001011010000000100011 F
b00000000000000000000000000001100 G
b0100011 J
b00000 K
b01100 L
b01011 M
1P
b00000000000000000000000000001100 R
b00001 V
1Y
b00000000000000000000000000000000 [
b00000000000000000000000000001100 \
0]
b00000000000000000000000000000000 `
0e
1g
0i
0l
b0000 m
0o
b00000000000000000001000000000000 q
b00000000000000000001000000000000 s
b00000000000000000000000000001100 t
1u
b00000000000000000000100000000000 $!
b00000000000000000000000000001100 9!
b00000010110000001100010100110011 :!
b00000000000000000000000000011000 ;!
#65
b00000000000000000000100000000000 +
b00000000000000000000100000000000 q
b00000000000000000000100000000000 s
0u
b00000000000000000000100000000000 >!
#68
#70
b01 %
b00000000000000000000000000001100 '
b0000000 )
b00000000000000000000000000000000 .
b00000000000000000000000000000000 0
b00000 1
b00000 5
b00000000110001011010000000100011 8
b00000000000000000000100000000000 9
b00000000000000000000000000000001 ;
b00000000000000000000000000000001 <
0=
b00000000000001011010000010000011 ?
b00000000000000000000000000000000 C
1D
b00000000110001011010000000100011 E
b00000000000001011010000010000011 F
b00000000000000000000100000000000 G
b0100011 I
b0000011 J
b00001 K
b00000 L
b00000 N
0P
1Q
b00000000000000000000000000000000 R
0Y
b00000000000000000000000000000000 \
b0000 a
0d
b00000 f
0n
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
1u
b00000000000000000000000000001100 %!
b00000000000000000000000000000000 9!
#75
b00000000000000000000000000000000 +
b00000000000000000000000000000000 q
0u
b00000000000000000000000000000000 >!
#78
#80
b10 %
b00000000000000000000000000000000 '
b00000000000000000000000000000000 7
b00000000000001011010000010000011 8
b00000000000000000000000000001100 :
b00000000000000000000000000000000 <
0>
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 A
b00000000000000000000000000000001 C
0D
b00000000000001011010000010000011 E
b00000000000000000000000000000000 F
b00000000000000000000000000001100 H
b0000011 I
b0000000 J
b00000 K
b00001 L
b00000 M
1O
b00000000000000000000000000001100 R
0g
1u
#85
0u
#88
#90
b00000000000000000000000000011100 $
b00 %
b00000000000000000000000000011100 &
b0110011 )
1*
b00000000000000000000000000011000 -
b00000010110000001100010100110011 .
b00000000000000000000000000101100 /
b00000010110000001100010100110011 0
b00001 1
b01100 2
b00000000000000000000000000011000 3
b00000000000000000000000000101100 4
b01010 5
b00000010110000001000001010110011 6
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 C
b00000000000000000000000000000000 E
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b0000000 I
b00000 L
b00000000000000000000000000000000 R
b0100 a
1c
b10000 f
1u
b00000000000000000000000000001100 x
b00000010110000001000001010110011 :!
b00000000000000000000000000011100 ;!
#95
b00000000000000000000000000001100 +
b00000000000000000000000000001100 ,
b00000000000000000000000000001100 q
b00000000000000000000000000001100 r
0u
b00000000000000000000000000001100 >!
b00000000000000000000000000001100 ?!
b00000000000000000000000000001100 @!
#98
#100
b00000000000000000000000000100000 $
b00000000000000000000000000100000 &
b00000000000000000000000000011100 -
b00000010110000001000001010110011 .
b00000010110000001000001010110011 0
b00000000000000000000000000011100 3
b00101 5
b00000000000000000000000000000000 6
b00000010110000001100010100110011 ?
b00000000000000000000000000001100 B
b00000010110000001100010100110011 F
b0110011 J
b01010 K
b00001 M
b01100 N
0Q
b00000000000000000000000000001100 U
b00000 V
b0000 a
b01110 f
b00000000000000000000000010010000 s
b00000000000000000000000000001100 t
1u
b00000000000000000000000000001100 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000100000 ;!
#105
0u
#108
#110
b00000000000000000000000000100100 $
b00000000000000000000000000100100 &
b00000000000000000000000000001100 '
b0000000 )
0*
b00000000000000000000000000100000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000 1
b00000 2
b00000000000000000000000000100000 3
b00000000000000000000000000000000 4
b00000 5
b00000000000000000000000010010000 7
b00000010110000001100010100110011 8
b00000010110000001000001010110011 ?
b00000000000000000000000010010000 A
b00000010110000001100010100110011 E
b00000010110000001000001010110011 F
b0110011 I
b00101 K
b01010 L
0O
0c
b00000 f
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
1u
b00000000000000000000000000100100 ;!
#115
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 q
0u
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
#118
#120
b00000000000000000000000000101000 $
b00000000000000000000000000101000 &
b00000000000000000000000000100100 -
b00000000000000000000000000100100 3
b00000000000000000000000000000000 7
b00000010110000001000001010110011 8
b00000000000000000000000010010000 9
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000010010000 C
b00000010110000001000001010110011 E
b00000000000000000000000000000000 F
b00000000000000000000000010010000 G
b0000000 J
b00000 K
b00101 L
b00000 M
b00000 N
1Q
b00000000000000000000000010010000 R
b00000000000000000000000000000000 U
b00000000000000000000000000000000 t
1u
b00000000000000000000000000000000 9!
b00000000000000000000000000101000 ;!
#125
0u
#128
#130
b00000000000000000000000000101100 $
b00000000000000000000000000101100 &
b00000000000000000000000000000000 '
b00000000000000000000000000101000 -
b00000000000000000000000000101000 3
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 C
b00000000000000000000000000000000 E
b00000000000000000000000000000000 G
b0000000 I
b00000 L
1O
b00000000000000000000000000000000 R
1u
b00000000000000000000000010010000 |
b00000000000000000000000000101100 ;!
#135
0u
#138
#140
b00000000000000000000000000110000 $
b00000000000000000000000000110000 &
b00000000000000000000000000101100 -
b00000000000000000000000000101100 3
1u
b00000000000000000000000000110000 ;!
#145
0u
#148
#150
b00000000000000000000000000110100 $
b00000000000000000000000000110100 &
b00000000000000000000000000110000 -
b00000000000000000000000000110000 3
1u
b00000000000000000000000000110100 ;!
#155
0u
#158
#160
b00000000000000000000000000111000 $
b00000000000000000000000000111000 &
b00000000000000000000000000110100 -
b00000000000000000000000000110100 3
1u
b00000000000000000000000000111000 ;!
#165
0u
#168
#170
b00000000000000000000000000111100 $
b00000000000000000000000000111100 &
b00000000000000000000000000111000 -
b00000000000000000000000000111000 3
1u
b00000000000000000000000000111100 ;!
#175
0u
#178
#180
b00000000000000000000000001000000 $
b00000000000000000000000001000000 &
b00000000000000000000000000111100 -
b00000000000000000000000000111100 3
1u
b00000000000000000000000001000000 ;!
#185
0u
#188
#190
b00000000000000000000000001000100 $
b00000000000000000000000001000100 &
b00000000000000000000000001000000 -
b00000000000000000000000001000000 3
1u
b00000000000000000000000001000100 ;!
#195
0u
#198
#200
b00000000000000000000000001001000 $
b00000000000000000000000001001000 &
b00000000000000000000000001000100 -
b00000000000000000000000001000100 3
1u
b00000000000000000000000001001000 ;!
#205
0u
#208
#210
b00000000000000000000000001001100 $
b00000000000000000000000001001100 &
b00000000000000000000000001001000 -
b00000000000000000000000001001000 3
1u
b00000000000000000000000001001100 ;!
#215
0u
#218
#220
b00000000000000000000000001010000 $
b00000000000000000000000001010000 &
b00000000000000000000000001001100 -
b00000000000000000000000001001100 3
1u
b00000000000000000000000001010000 ;!
#225
0u
#228
#230
b00000000000000000000000001010100 $
b00000000000000000000000001010100 &
b00000000000000000000000001010000 -
b00000000000000000000000001010000 3
1u
b00000000000000000000000001010100 ;!
#235
0u
#238
#240
b00000000000000000000000001011000 $
b00000000000000000000000001011000 &
b00000000000000000000000001010100 -
b00000000000000000000000001010100 3
1u
b00000000000000000000000001011000 ;!
#245
0u
#248
#250
b00000000000000000000000001011100 $
b00000000000000000000000001011100 &
b00000000000000000000000001011000 -
b00000000000000000000000001011000 3
1u
b00000000000000000000000001011100 ;!
#255
0u
#258
#260
b00000000000000000000000001100000 $
b00000000000000000000000001100000 &
b00000000000000000000000001011100 -
b00000000000000000000000001011100 3
1u
b00000000000000000000000001100000 ;!
#265
0u
#268
#270
b00000000000000000000000001100100 $
b00000000000000000000000001100100 &
b00000000000000000000000001100000 -
b00000000000000000000000001100000 3
1u
b00000000000000000000000001100100 ;!
#275
0u
#278
#280
b00000000000000000000000001101000 $
b00000000000000000000000001101000 &
b00000000000000000000000001100100 -
b00000000000000000000000001100100 3
1u
b00000000000000000000000001101000 ;!
#285
0u
#288
#290
b00000000000000000000000001101100 $
b00000000000000000000000001101100 &
b00000000000000000000000001101000 -
b00000000000000000000000001101000 3
1u
b00000000000000000000000001101100 ;!
#295
0u
#298
#300
b00000000000000000000000001110000 $
b00000000000000000000000001110000 &
b00000000000000000000000001101100 -
b00000000000000000000000001101100 3
1u
b00000000000000000000000001110000 ;!
#305
0u
#308
#310
b00000000000000000000000001110100 $
b00000000000000000000000001110100 &
b00000000000000000000000001110000 -
b00000000000000000000000001110000 3
1u
b00000000000000000000000001110100 ;!
#315
0u
#318
#320
b00000000000000000000000001111000 $
b00000000000000000000000001111000 &
b00000000000000000000000001110100 -
b00000000000000000000000001110100 3
1u
b00000000000000000000000001111000 ;!
#325
0u
#328
#330
b00000000000000000000000001111100 $
b00000000000000000000000001111100 &
b00000000000000000000000001111000 -
b00000000000000000000000001111000 3
1u
b00000000000000000000000001111100 ;!
#335
0u
#338
#340
b00000000000000000000000010000000 $
b00000000000000000000000010000000 &
b00000000000000000000000001111100 -
b00000000000000000000000001111100 3
1u
b00000000000000000000000010000000 ;!
#345
0u
#348
#350
b00000000000000000000000010000100 $
b00000000000000000000000010000100 &
b00000000000000000000000010000000 -
b00000000000000000000000010000000 3
1u
b00000000000000000000000010000100 ;!
#355
0u
#358
#360
b00000000000000000000000010001000 $
b00000000000000000000000010001000 &
b00000000000000000000000010000100 -
b00000000000000000000000010000100 3
1u
b00000000000000000000000010001000 ;!
#365
0u
#368
#370
b00000000000000000000000010001100 $
b00000000000000000000000010001100 &
b00000000000000000000000010001000 -
b00000000000000000000000010001000 3
1u
b00000000000000000000000010001100 ;!
#375
0u
#378
#380
b00000000000000000000000010010000 $
b00000000000000000000000010010000 &
b00000000000000000000000010001100 -
b00000000000000000000000010001100 3
1u
b00000000000000000000000010010000 ;!
#385
0u
#388
#390
b00000000000000000000000010010100 $
b00000000000000000000000010010100 &
b00000000000000000000000010010000 -
b00000000000000000000000010010000 3
1u
b00000000000000000000000010010100 ;!
#395
0u
#398
#400
b00000000000000000000000010011000 $
b00000000000000000000000010011000 &
b00000000000000000000000010010100 -
b00000000000000000000000010010100 3
1u
b00000000000000000000000010011000 ;!
#405
0u
